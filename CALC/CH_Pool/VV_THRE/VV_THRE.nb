(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1101128,      22848]
NotebookOptionsPosition[   1098514,      22803]
NotebookOutlinePosition[   1098847,      22818]
CellTagsIndexPosition[   1098804,      22815]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"$Path", ",", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
      "$HomeDirectory", ",", "\"\<GDC\>\"", ",", 
       "\"\<DialecticalStructures\>\""}], "}"}], "]"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"MemberQ", "[", 
      RowBox[{"$Path", ",", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
         "$HomeDirectory", ",", "\"\<GDC\>\"", ",", 
          "\"\<DialecticalStructures\>\""}], "}"}], "]"}]}], "]"}]}], ",", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"$Path", ",", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
        "$HomeDirectory", ",", "\"\<GDC\>\"", ",", 
         "\"\<DialecticalStructures\>\""}], "}"}], "]"}]}], "]"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Package path \>\"", ",", 
    RowBox[{"FindFile", "[", "\"\<GDCAnalysis3`\>\"", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Package path \>\"", ",", 
    RowBox[{"FindFile", "[", "\"\<GDCComparisons`\>\"", "]"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{"<<", "GDCAnalysis3`"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "GDCComparisons`"}]}], "Input",
 CellChangeTimes->{{3.83878344341405*^9, 3.8387834560523*^9}, {
  3.838783553161769*^9, 3.838783575438624*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"9e4d81f8-df63-4331-949c-e71acd1c7214"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package path \"\>", 
   "\[InvisibleSpace]", \
"\<\"/home/carla/GDC/DialecticalStructures/GDCAnalysis3.m\"\>"}],
  SequenceForm[
  "Package path ", "/home/carla/GDC/DialecticalStructures/GDCAnalysis3.m"],
  Editable->False]], "Print",
 CellChangeTimes->{3.838887010366906*^9, 3.838889665435327*^9, 
  3.838889838462433*^9, 3.8389507341904497`*^9, 3.838956278203684*^9, 
  3.838963748970807*^9, 3.838964508073614*^9, 3.8390452140618343`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"85d76b6a-2ad6-4aa6-9fb3-c636455aa8df"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package path \"\>", 
   "\[InvisibleSpace]", \
"\<\"/home/carla/GDC/DialecticalStructures/GDCComparisons.m\"\>"}],
  SequenceForm[
  "Package path ", "/home/carla/GDC/DialecticalStructures/GDCComparisons.m"],
  Editable->False]], "Print",
 CellChangeTimes->{3.838887010366906*^9, 3.838889665435327*^9, 
  3.838889838462433*^9, 3.8389507341904497`*^9, 3.838956278203684*^9, 
  3.838963748970807*^9, 3.838964508073614*^9, 3.8390452140665083`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"881ecf28-4735-4448-ac05-0bf801a45a59"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getData", "[", 
     RowBox[{"name_", ",", " ", "mod_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "filesAR", ",", "inputAR", ",", "filesBR", ",", " ", "inputBR", ",", 
        " ", "dataAR", ",", " ", "dataBR", ",", "vvBR"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"filesAR", "=", 
        RowBox[{"FileNames", "[", 
         RowBox[{"\"\</home/carla/GDC/CH_Pool/\>\"", "<>", 
          RowBox[{"ToString", "[", "name", "]"}], "<>", 
          "\"\</GDC_CHP_AR_\>\"", "<>", 
          RowBox[{"ToString", "[", "name", "]"}], "<>", 
          "\"\<_ALL_Out/*.txt\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"inputAR", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Get", "[", "#", "]"}], "&"}], ",", " ", "filesAR"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"filesBR", "=", 
        RowBox[{"FileNames", "[", 
         RowBox[{"\"\</home/carla/GDC/CH_Pool/\>\"", "<>", 
          RowBox[{"ToString", "[", "name", "]"}], "<>", 
          "\"\</GDC_CHP_BR_\>\"", "<>", 
          RowBox[{"ToString", "[", "name", "]"}], "<>", 
          "\"\<_ALL_Out/*.txt\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"inputBR", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Get", "[", "#", "]"}], "&"}], ",", " ", "filesBR"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"mod", "\[Equal]", "\"\<DOJ\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"dataAR", "=", 
           RowBox[{"inputAR", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"dataBR", "=", 
           RowBox[{"inputBR", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"mod", "\[Equal]", "\"\<Z\>\""}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"dataAR", "=", 
           RowBox[{"inputAR", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"dataBR", "=", 
           RowBox[{"inputBR", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"mod", "\[Equal]", "\"\<F\>\""}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"dataAR", "=", 
           RowBox[{"inputAR", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"dataBR", "=", 
           RowBox[{"inputBR", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ";"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"dataAR", ",", "dataBR"}], "}"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getPieChart", "[", 
     RowBox[{"data_", ",", " ", "tsInd_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "min", ",", " ", "max", ",", "maxHs", ",", "devH", ",", "vals", ",", 
        "binW", ",", "coun", ",", "pos08", ",", "counRAW", ",", "topL", ",", 
        "circ", ",", " ", "legKeys"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"min", "=", 
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{"tsInd", ",", "1"}], "]"}], "]"}], "[", "\"\<value\>\"", 
          "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"max", "=", 
        RowBox[{
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"tsInd", ",", "2"}], "]"}], "]"}], "[", "\"\<value\>\"", 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"maxHs", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"tsInd", ",", "2"}], "]"}], "]"}], "[", "\"\<list\>\"", 
           "]"}], ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<maxHs \>\"", ",", " ", "maxHs"}], "]"}], ";"}], "*)"}],
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"HIER", " ", 
         RowBox[{"FEHLT", " ", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"devH", "=", 
        RowBox[{"{", 
         RowBox[{
         "\"\<No Main Culm as CAM\>\"", ",", "\"\<No Main Culm as SIL\>\"", 
          ",", "\"\<No Main Culm as ORS\>\"", ",", 
          "\"\<No Main Culm as ML\>\"", ",", 
          RowBox[{"!", "\"\<No Main Culm as CM\>\""}], ",", 
          "\[IndentingNewLine]", "\"\<No BCL as CAM\>\"", ",", 
          "\"\<No BCL as SIL\>\"", ",", "\"\<No BCL as ORS\>\"", ",", 
          RowBox[{"!", "\"\<No BCL as ML\>\""}], ",", " ", 
          "\"\<No BCL as CM\>\"", ",", "\[IndentingNewLine]", 
          "\"\<No Non-Culm as CAM\>\"", ",", "\"\<No Non-Culm as SIL\>\"", 
          ",", 
          RowBox[{"!", "\"\<No Non-Culm as ORS\>\""}], ",", 
          "\"\<No Non-Culm as ML\>\"", ",", "\"\<No Non-Culm as CM\>\""}], 
         "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"vals", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{"Function", "[", 
           RowBox[{"hT", ",", "\[IndentingNewLine]", 
            RowBox[{"compDistFunc", "[", 
             RowBox[{"hT", ",", " ", "devH", ",", " ", "\"\<PEN\>\""}], 
             "]"}]}], "]"}], ",", "\[IndentingNewLine]", "maxHs"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<vals \>\"", ",", " ", "vals"}], "]"}], ";"}], "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"vals", "=", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{"tsInd", ",", "3"}], "]"}], "]"}]}], ";"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"counRAW", "=", 
        RowBox[{"KeySort", "[", 
         RowBox[{"Counts", "[", "vals", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Counts RAW: \>\"", ",", " ", "counRAW"}], "]"}], ";"}],
         "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Position", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
           RowBox[{"p_", "/;", 
            RowBox[{"p", ">", "2"}]}]}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Max", "[", 
           RowBox[{"Keys", "[", "counRAW", "]"}], "]"}], "\[GreaterEqual]", 
          "0.8"}], ",", "\[IndentingNewLine]", " ", 
         RowBox[{
          RowBox[{"pos08", "=", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{
              RowBox[{"Keys", "[", "counRAW", "]"}], ",", 
              RowBox[{"p_", "/;", 
               RowBox[{"p", ">=", "0.8"}]}]}], " ", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"coun", "=", 
           RowBox[{"counRAW", "[", 
            RowBox[{"[", 
             RowBox[{"pos08", ";;"}], "]"}], "]"}]}], ";"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"coun", "=", 
           RowBox[{"{", "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Counts FILTERED: \>\"", ",", " ", "coun"}], "]"}], 
         ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"Keys", "[", "coun", "]"}], "]"}], ">", "2"}], ",", " ", 
         RowBox[{"legKeys", "=", 
          RowBox[{"Append", "[", 
           RowBox[{
            RowBox[{"Prepend", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{"None", ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"Keys", "[", "coun", "]"}], "]"}], "-", "2"}]}], 
                 "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"ToString", "[", 
                 RowBox[{"First", "[", 
                  RowBox[{"Keys", "[", "coun", "]"}], "]"}], "]"}], ",", 
                "25"}], "]"}]}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"ToString", "[", 
               RowBox[{"Last", "[", 
                RowBox[{"Keys", "[", "coun", "]"}], "]"}], "]"}], ",", "25"}],
              "]"}]}], "]"}]}], ",", " ", 
         RowBox[{"legKeys", "=", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"ToString", "[", "#", "]"}], ",", "25"}], "]"}], "&"}],
             ",", 
            RowBox[{"Keys", "[", "coun", "]"}]}], "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"circ", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Max", "[", 
            RowBox[{"Keys", "[", "counRAW", "]"}], "]"}], "\[GreaterEqual]", 
           "0.8"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Labeled", "[", 
           RowBox[{
            RowBox[{"PieChart", "[", 
             RowBox[{
              RowBox[{"Values", "[", "coun", "]"}], ",", 
              RowBox[{"ChartLegends", "\[Rule]", 
               RowBox[{"Placed", "[", 
                RowBox[{"legKeys", ",", "Bottom"}], "]"}]}], ",", " ", 
              RowBox[{"ChartStyle", "\[Rule]", "\"\<TemperatureMap\>\""}]}], 
             "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"ToString", "[", 
               RowBox[{"Total", "[", 
                RowBox[{"Values", "[", "coun", "]"}], "]"}], "]"}], ",", 
              "25"}], "]"}], ",", "Top"}], "]"}], ",", "\[IndentingNewLine]", 
          
          RowBox[{"PieChart", "[", 
           RowBox[{
            RowBox[{"Values", "[", "coun", "]"}], ",", 
            RowBox[{"ChartLegends", "\[Rule]", 
             RowBox[{"Placed", "[", 
              RowBox[{"legKeys", ",", "Bottom"}], "]"}]}], ",", " ", 
            RowBox[{"ChartStyle", "\[Rule]", "\"\<TemperatureMap\>\""}]}], 
           "]"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "circ", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getPieChartForAllTimes", "[", 
    RowBox[{"nam_", ",", " ", "conf_", ",", " ", "mod_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "data", ",", "tsSize", ",", " ", "pAR", ",", " ", "pBR", ",", "pAll", 
       ",", " ", "out"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"data", "=", 
       RowBox[{"getData", "[", 
        RowBox[{"nam", ",", " ", "conf"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tsSize", "=", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"nam", "\[Equal]", "\"\<DLB\>\""}], ",", "9", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"nam", "\[Equal]", "\"\<MUR\>\""}], ",", "8", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"nam", "\[Equal]", "\"\<LYE\>\""}], ",", "8", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"nam", "\[Equal]", "\"\<PHI\>\""}], ",", "7", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"nam", "\[Equal]", "\"\<SED\>\""}], ",", "6", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"nam", "\[Equal]", "\"\<AUS\>\""}], ",", "3"}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pAR", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"getPieChart", "[", 
           RowBox[{
            RowBox[{"data", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", "#"}], "]"}], "&"}], 
         ",", 
         RowBox[{"Range", "[", "tsSize", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pBR", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"getPieChart", "[", 
           RowBox[{
            RowBox[{"data", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", " ", "#"}], "]"}], "&"}], 
         ",", 
         RowBox[{"Range", "[", 
          RowBox[{"tsSize", "-", "1"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pAll", "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"pAR", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"pBR", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"tsSize", "-", "1"}]}], "}"}]}], "]"}], ",", "1"}], 
          "]"}], ",", 
         RowBox[{"pAR", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"out", "=", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"mod", "\[Equal]", "\"\<XB\>\""}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"nam", "\[NotEqual]", " ", "\"\<DLB\>\""}], ",", 
           RowBox[{"PadLeft", "[", 
            RowBox[{"pAR", ",", "8", ",", " ", 
             RowBox[{"GrayLevel", "[", "1", "]"}]}], "]"}], ",", 
           RowBox[{"Drop", "[", 
            RowBox[{"pAR", ",", "1"}], "]"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"mod", "\[Equal]", "\"\<XA\>\""}], ",", "  ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"nam", "\[NotEqual]", " ", "\"\<DLB\>\""}], ",", 
           RowBox[{"PadLeft", "[", 
            RowBox[{"pBR", ",", "7", ",", " ", 
             RowBox[{"GrayLevel", "[", "1", "]"}]}], "]"}], ",", 
           RowBox[{"Drop", "[", 
            RowBox[{"pBR", ",", "1"}], "]"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"mod", "\[Equal]", "\"\<X\>\""}], ",", "  ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"nam", "\[NotEqual]", " ", "\"\<DLB\>\""}], ",", 
           RowBox[{"PadLeft", "[", 
            RowBox[{"pAll", ",", "15", ",", " ", 
             RowBox[{"GrayLevel", "[", "1", "]"}]}], "]"}], ",", 
           RowBox[{"Drop", "[", 
            RowBox[{"pAll", ",", "2"}], "]"}]}], "]"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"Prepend", "[", 
        RowBox[{"out", ",", " ", 
         RowBox[{"Style", "[", 
          RowBox[{"nam", ",", "20"}], "]"}]}], "]"}], "]"}], ";"}]}], "]"}]}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getTable", "[", 
    RowBox[{"data_", ",", " ", "ts_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "table", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"ItemStyle", "\[Rule]", "14"}], ",", 
       RowBox[{"Spacings", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", ".8"}], "}"}]}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"table", "=", 
       RowBox[{"Text", "@", 
        RowBox[{"Grid", "[", 
         RowBox[{
          RowBox[{"Prepend", "[", 
           RowBox[{"data", ",", "ts"}], "]"}], ",", 
          RowBox[{"Background", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"None", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Lighter", "[", 
                RowBox[{"Yellow", ",", ".9"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"White", ",", 
                 RowBox[{"Lighter", "[", 
                  RowBox[{"Green", ",", ".8"}], "]"}]}], "}"}]}], "}"}]}], 
            "}"}]}], ",", 
          RowBox[{"Dividers", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Darker", "[", 
                RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"Lighter", "[", 
                 RowBox[{"Gray", ",", ".5"}], "]"}], "}"}], ",", 
               RowBox[{"Darker", "[", 
                RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Darker", "[", 
                RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
               RowBox[{"Darker", "[", 
                RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
               RowBox[{"{", "False", "}"}], ",", 
               RowBox[{"Darker", "[", 
                RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}]}], "}"}]}], ",", 
          RowBox[{"Alignment", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"Left", ",", 
              RowBox[{"{", "Center", "}"}]}], "}"}], "}"}]}], ",", 
          RowBox[{"ItemSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"5", ",", 
               RowBox[{"{", "22", "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", 
               RowBox[{"{", "12", "}"}]}], "}"}]}], "}"}]}], ",", 
          RowBox[{"Frame", "\[Rule]", 
           RowBox[{"Darker", "[", 
            RowBox[{"Gray", ",", ".6"}], "]"}]}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "table", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8157338476571074`*^9, 3.815733970939773*^9}, {
   3.815734242999981*^9, 3.8157342620524693`*^9}, {3.8157345566220493`*^9, 
   3.815734705033065*^9}, {3.8364490342768784`*^9, 3.836449204552734*^9}, {
   3.836449262221177*^9, 3.836449280918645*^9}, {3.836449447083247*^9, 
   3.8364494907162952`*^9}, {3.836449599606724*^9, 3.836449645542387*^9}, {
   3.8364496791423483`*^9, 3.83644967985944*^9}, {3.8364497229618196`*^9, 
   3.8364497425166817`*^9}, {3.8364497753637543`*^9, 3.836449813684531*^9}, {
   3.836449859381317*^9, 3.836449859811026*^9}, {3.836449895573716*^9, 
   3.8364499002956543`*^9}, {3.836451447292972*^9, 3.836451474445426*^9}, {
   3.836451782379171*^9, 3.836451789693902*^9}, {3.836452332912838*^9, 
   3.836452401995637*^9}, {3.8364533174681797`*^9, 3.8364533663623743`*^9}, {
   3.836453397432109*^9, 3.836453573774934*^9}, {3.836455184049706*^9, 
   3.8364551956411963`*^9}, {3.836455319780858*^9, 3.836455322113904*^9}, {
   3.8364554685653763`*^9, 3.836455637975909*^9}, {3.836455710541795*^9, 
   3.83645571231684*^9}, {3.83645575221029*^9, 3.836455787089527*^9}, {
   3.836455895934512*^9, 3.83645595378854*^9}, {3.836455984311494*^9, 
   3.8364559846972313`*^9}, {3.8364560968469667`*^9, 3.836456105449773*^9}, {
   3.8364566388974752`*^9, 3.8364567706338367`*^9}, {3.8364568391215677`*^9, 
   3.8364568645451317`*^9}, {3.836456984490007*^9, 3.83645705488769*^9}, {
   3.836457116069066*^9, 3.836457225554454*^9}, {3.836457290459344*^9, 
   3.8364573510941963`*^9}, {3.836457386258069*^9, 3.836457400786853*^9}, {
   3.8364574579649057`*^9, 3.836457516622908*^9}, {3.836457667965624*^9, 
   3.836457803323319*^9}, {3.836458265534203*^9, 3.836458312396048*^9}, {
   3.836458626629315*^9, 3.836458646386322*^9}, {3.836458680494885*^9, 
   3.836458682583868*^9}, {3.836468302783517*^9, 3.836468362972106*^9}, {
   3.836468535764203*^9, 3.83646854079587*^9}, {3.8364686630053673`*^9, 
   3.8364686713069687`*^9}, {3.8364696779778557`*^9, 3.836469700708928*^9}, {
   3.836469795356161*^9, 3.836469799846912*^9}, {3.836469840152479*^9, 
   3.836469881047785*^9}, {3.836470031514019*^9, 3.836470068202373*^9}, {
   3.836470130027461*^9, 3.836470130408499*^9}, {3.836470242989242*^9, 
   3.836470309474815*^9}, {3.836470417281983*^9, 3.8364704258740187`*^9}, 
   3.83647050917216*^9, 3.836470556258716*^9, {3.836470622565341*^9, 
   3.836470623005542*^9}, {3.836470657734543*^9, 3.836470657959751*^9}, {
   3.8364707599317904`*^9, 3.8364707620059023`*^9}, {3.83647124177831*^9, 
   3.836471245560153*^9}, {3.83647130183904*^9, 3.8364713115725*^9}, {
   3.8364713958986483`*^9, 3.836471401398759*^9}, {3.836471465988442*^9, 
   3.8364714883472*^9}, {3.8364715378384523`*^9, 3.8364716075513887`*^9}, {
   3.8364716614307632`*^9, 3.8364716626631804`*^9}, {3.8364719825878572`*^9, 
   3.8364719879263287`*^9}, {3.836472202267075*^9, 3.8364723498779182`*^9}, {
   3.836476374881569*^9, 3.836476489278661*^9}, {3.836476643370187*^9, 
   3.836476644301278*^9}, 3.836476757815083*^9, {3.8364768549362373`*^9, 
   3.836476855893807*^9}, {3.8364772216945343`*^9, 3.8364772767011623`*^9}, {
   3.836477419584259*^9, 3.836477420908679*^9}, {3.836877560556182*^9, 
   3.836877561986607*^9}, {3.8388866176206408`*^9, 3.838886627109111*^9}, {
   3.838887064618341*^9, 3.8388871494168873`*^9}, {3.838887937626142*^9, 
   3.83888810006082*^9}, {3.838888132885908*^9, 3.838888137066827*^9}, {
   3.838888179267658*^9, 3.838888259533065*^9}, {3.838888322522015*^9, 
   3.838888328937222*^9}, {3.8388883983236847`*^9, 3.8388884013399477`*^9}, {
   3.838888504967656*^9, 3.838888509630186*^9}, {3.8388886552855883`*^9, 
   3.838888709373846*^9}, {3.838888750154559*^9, 3.8388887553591223`*^9}, {
   3.838888793889461*^9, 3.838888816203554*^9}, {3.8388888605337477`*^9, 
   3.8388888987010193`*^9}, {3.8388889456034737`*^9, 3.838888993754328*^9}, {
   3.838889166984879*^9, 3.838889233727624*^9}, {3.8388892689317017`*^9, 
   3.838889271373473*^9}, {3.838889324949869*^9, 3.838889325174859*^9}, {
   3.838889712874321*^9, 3.838889823061941*^9}, 3.838889985260912*^9, {
   3.8388901068905897`*^9, 3.838890197163409*^9}, {3.8388903836892853`*^9, 
   3.8388904036668997`*^9}, 3.8388904481140213`*^9, {3.838890538428822*^9, 
   3.838890596439142*^9}, {3.838890690277232*^9, 3.838890711081781*^9}, {
   3.838890743424575*^9, 3.838890874427909*^9}, {3.838890919526414*^9, 
   3.8388909297756567`*^9}, {3.8388910382820263`*^9, 
   3.8388910495722322`*^9}, {3.838956272172154*^9, 3.838956273048003*^9}, {
   3.839045136370983*^9, 3.839045172718794*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"7aedee36-1850-4312-8ed4-208fc2720596"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"name", "=", "\"\<DLB\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"namesAll", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<DLB\>\"", ",", "\"\<MUR\>\"", ",", "\"\<LYE\>\"", ",", "\"\<PHI\>\"",
      ",", "\"\<SED\>\"", ",", "\"\<AUS\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tsXB", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"#", ",", "25"}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\>\"", ",", "\"\<1b\>\"", ",", "\"\<2b\>\"", ",", "\"\<3b\>\"", 
       ",", "\"\<4b\>\"", ",", "\"\<5b\>\"", ",", "\"\<6b\>\"", ",", 
       "\"\<7b\>\"", ",", "\"\<8b\>\""}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tsXA", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<\>\"", ",", "\"\<2a\>\"", ",", "\"\<3a\>\"", ",", "\"\<4a\>\"", ",", 
     "\"\<5a\>\"", ",", "\"\<6a\>\"", ",", "\"\<7a\>\"", ",", "\"\<8a\>\""}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tsALL", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"#", ",", "25"}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\>\"", ",", "\"\<1b\>\"", ",", "\"\<2a\>\"", ",", "\"\<2b\>\"", 
       ",", "\"\<3a\>\"", ",", "\"\<3b\>\"", ",", "\"\<4a\>\"", ",", 
       "\"\<4b\>\"", ",", "\"\<5a\>\"", ",", "\"\<5b\>\"", ",", "\"\<6a\>\"", 
       ",", "\"\<6b\>\"", ",", "\"\<7a\>\"", ",", "\"\<7b\>\"", ",", 
       "\"\<8a\>\"", ",", "\"\<8b\>\""}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.810881540218586*^9, 3.810881799532802*^9}, {
   3.810882088047332*^9, 3.810882098323996*^9}, {3.810883978294343*^9, 
   3.8108840742569532`*^9}, {3.810884116308262*^9, 3.810884119991867*^9}, {
   3.810884805730564*^9, 3.8108848494900417`*^9}, {3.810964377982334*^9, 
   3.8109643914029016`*^9}, {3.810965601223838*^9, 3.810965609656477*^9}, {
   3.8110454545317*^9, 3.811045508575334*^9}, 3.811045600726914*^9, 
   3.811048249224799*^9, {3.8364474063107862`*^9, 3.83644741238032*^9}, {
   3.836455352136305*^9, 3.836455379606731*^9}, {3.836877603595727*^9, 
   3.836877604051141*^9}, {3.838964496484453*^9, 3.83896449912753*^9}, {
   3.839045183059497*^9, 3.8390451972402697`*^9}, {3.8390452760132923`*^9, 
   3.839045277843583*^9}, {3.839045371451796*^9, 3.839045372700663*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"d24108b3-c222-4f1f-885f-6a9bd06f3b56"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"getPieChartForAllTimes", "[", 
   RowBox[{"\"\<DLB\>\"", ",", " ", "\"\<Z\>\"", ",", " ", "\"\<X\>\""}], 
   "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.8368776252902*^9, 3.836877628112247*^9}, {
  3.8389637437877817`*^9, 3.838963771169654*^9}, {3.8390452060504503`*^9, 
  3.83904520899587*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"1118b9e4-ecf2-4e2c-bec8-314b74df257c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataDOJ", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"getPieChartForAllTimes", "[", 
       RowBox[{"#", ",", " ", "\"\<DOJ\>\"", ",", " ", "\"\<X\>\""}], "]"}], 
      "&"}], ",", "namesAll"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataF", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"getPieChartForAllTimes", "[", 
       RowBox[{"#", ",", " ", "\"\<F\>\"", ",", " ", "\"\<X\>\""}], "]"}], 
      "&"}], ",", "namesAll"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataZ", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"getPieChartForAllTimes", "[", 
       RowBox[{"#", ",", " ", "\"\<Z\>\"", ",", "\"\<X\>\""}], "]"}], "&"}], 
     ",", "namesAll"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8364552188875647`*^9, 3.836455239477983*^9}, {
   3.836455330200821*^9, 3.836455345408298*^9}, {3.836455384478307*^9, 
   3.836455413745688*^9}, {3.836455666619726*^9, 3.836455668039419*^9}, {
   3.836455997408678*^9, 3.836455998735948*^9}, {3.836457100306225*^9, 
   3.83645710087831*^9}, {3.8364572465904093`*^9, 3.8364572492396297`*^9}, {
   3.8364573695291443`*^9, 3.836457370937522*^9}, {3.836457815118948*^9, 
   3.836457823341751*^9}, {3.836459172408409*^9, 3.836459192617207*^9}, {
   3.836468700101819*^9, 3.836468703456002*^9}, {3.836468737257431*^9, 
   3.836468740051442*^9}, {3.836469722641481*^9, 3.836469726717225*^9}, 
   3.8364701779986362`*^9, 3.836470517497521*^9, {3.8364706917749023`*^9, 
   3.836470723923238*^9}, {3.8364707704714403`*^9, 3.8364707866220303`*^9}, {
   3.836471329656904*^9, 3.836471336263275*^9}, {3.836471670524024*^9, 
   3.8364716726854773`*^9}, {3.836472368963932*^9, 3.836472378210066*^9}, 
   3.836476877364336*^9, {3.836476915213995*^9, 3.8364769193177433`*^9}, {
   3.836877575499051*^9, 3.836877584277051*^9}, {3.8389645147607613`*^9, 
   3.838964522211587*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"da0a5a0c-5203-4684-92ec-3c0bdc55bf00"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"gridDOJ", "=", 
   RowBox[{"getTable", "[", 
    RowBox[{"dataDOJ", ",", " ", "tsALL"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gridF", "=", 
   RowBox[{"getTable", "[", 
    RowBox[{"dataF", ",", " ", "tsALL"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"gridZ", "=", 
  RowBox[{"getTable", "[", 
   RowBox[{"dataZ", ",", " ", "tsALL"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.836457834325283*^9, 3.8364579118747063`*^9}, {
   3.836458422766184*^9, 3.836458423064384*^9}, {3.8364585886173887`*^9, 
   3.836458602339093*^9}, {3.8364586993205357`*^9, 3.836458916961307*^9}, {
   3.836459033634987*^9, 3.83645906140097*^9}, {3.8364591677601337`*^9, 
   3.836459169914762*^9}, {3.836459230473937*^9, 3.836459248916408*^9}, 
   3.8364682968074903`*^9, {3.836468381055093*^9, 3.83646842188288*^9}, {
   3.836468594947194*^9, 3.8364686002076387`*^9}, {3.8364687420641413`*^9, 
   3.836468746149288*^9}, {3.8364697332895823`*^9, 3.8364697400177717`*^9}, {
   3.8364706895435247`*^9, 3.836470730208631*^9}, 3.836471350644853*^9, {
   3.836471674963275*^9, 3.8364716783812017`*^9}, {3.836472397849071*^9, 
   3.8364724060305843`*^9}, {3.836477079459794*^9, 3.8364770830855303`*^9}, 
   3.836477426827896*^9, {3.838964525727665*^9, 3.838964541317203*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"232d6ce8-b635-48bd-b14f-881da64e4a39"],

Cell[BoxData[
 InterpretationBox[Cell[BoxData[
   FormBox[
    TagBox[GridBox[{
       {
        StyleBox["\<\"\"\>",
         StripOnInput->False,
         FontSize->25], 
        StyleBox["\<\"1b\"\>",
         StripOnInput->False,
         FontSize->25], 
        StyleBox["\<\"2a\"\>",
         StripOnInput->False,
         FontSize->25], 
        StyleBox["\<\"2b\"\>",
         StripOnInput->False,
         FontSize->25], 
        StyleBox["\<\"3a\"\>",
         StripOnInput->False,
         FontSize->25], 
        StyleBox["\<\"3b\"\>",
         StripOnInput->False,
         FontSize->25], 
        StyleBox["\<\"4a\"\>",
         StripOnInput->False,
         FontSize->25], 
        StyleBox["\<\"4b\"\>",
         StripOnInput->False,
         FontSize->25], 
        StyleBox["\<\"5a\"\>",
         StripOnInput->False,
         FontSize->25], 
        StyleBox["\<\"5b\"\>",
         StripOnInput->False,
         FontSize->25], 
        StyleBox["\<\"6a\"\>",
         StripOnInput->False,
         FontSize->25], 
        StyleBox["\<\"6b\"\>",
         StripOnInput->False,
         FontSize->25], 
        StyleBox["\<\"7a\"\>",
         StripOnInput->False,
         FontSize->25], 
        StyleBox["\<\"7b\"\>",
         StripOnInput->False,
         FontSize->25], 
        StyleBox["\<\"8a\"\>",
         StripOnInput->False,
         FontSize->25], 
        StyleBox["\<\"8b\"\>",
         StripOnInput->False,
         FontSize->25]},
       {
        StyleBox["\<\"DLB\"\>",
         StripOnInput->False,
         FontSize->20], 
        GraphicsBox[{{}, {}, {
           {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
            0.5]}], {{{}, {}}, {}}, {}}, {{{}, {}}, {}}, {}, {}}, {{}, {}}, \
{{{}, {}, {}, {}}, {}}},
         ContentSelectable->False,
         DisplayFunction->Identity,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         PlotRange->{{-1., 1.}, {-1., 1.}},
         PlotRangePadding->Scaled[0.05]], 
        GraphicsBox[{{}, {}, {
           {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
            0.5]}], {{{}, {}}, {}}, {}}, {{{}, {}}, {}}, {}, {}}, {{}, {}}, \
{{{}, {}, {}, {}}, {}}},
         ContentSelectable->False,
         DisplayFunction->Identity,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         PlotRange->{{-1., 1.}, {-1., 1.}},
         PlotRangePadding->Scaled[0.05]], 
        GraphicsBox[{{}, {}, {
           {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
            0.5]}], {{{}, {}}, {}}, {}}, {{{}, {}}, {}}, {}, {}}, {{}, {}}, \
{{{}, {}, {}, {}}, {}}},
         ContentSelectable->False,
         DisplayFunction->Identity,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         PlotRange->{{-1., 1.}, {-1., 1.}},
         PlotRangePadding->Scaled[0.05]], 
        GraphicsBox[{{}, {}, {
           {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
            0.5]}], {{{}, {}}, {}}, {}}, {{{}, {}}, {}}, {}, {}}, {{}, {}}, \
{{{}, {}, {}, {}}, {}}},
         ContentSelectable->False,
         DisplayFunction->Identity,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         PlotRange->{{-1., 1.}, {-1., 1.}},
         PlotRangePadding->Scaled[0.05]], 
        GraphicsBox[{{}, {}, {
           {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
            0.5]}], {{{}, {}}, {}}, {}}, {{{}, {}}, {}}, {}, {}}, {{}, {}}, \
{{{}, {}, {}, {}}, {}}},
         ContentSelectable->False,
         DisplayFunction->Identity,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         PlotRange->{{-1., 1.}, {-1., 1.}},
         PlotRangePadding->Scaled[0.05]], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              DynamicModuleBox[{
               DynamicChart`click$17260$27858 = False, 
                DynamicChart`click$17264$27858 = False, 
                DynamicChart`click$17268$27858 = False, 
                DynamicChart`click$17272$27858 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.3463968515384828`, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 4]& , TagBoxNote -> "4"], 
                    StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
                    Style[4, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17260$27858, 
                    FEPrivate`Not[DynamicChart`click$17260$27858]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17260$27858, {{{1., 0.}, {0., 
                    1.}}, {-0.1246979603717467, 0.156366296493606}}, {{1, 
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17260$27858}]], 
                    "DelayedClickEffect"]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.819984, 0.859297, 0.982692]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.8975979010256552, 
                    1.3463968515384828`}]}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 5]& , TagBoxNote -> "5"], 
                    StyleBox["5", {}, StripOnInput -> False]], Annotation[#, 
                    Style[5, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17264$27858, 
                    FEPrivate`Not[DynamicChart`click$17264$27858]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17264$27858, {{{1., 0.}, {0., 1.}}, {
                    0.19498558243636474`, 0.04450418679126288}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17264$27858}]], 
                    "DelayedClickEffect"]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.992503, 0.986373, 0.425376]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.6927937030769646`, -0.8975979010256552}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 4]& , 
                    TagBoxNote -> "4"], 
                    StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
                    Style[4, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17268$27858, 
                    FEPrivate`Not[DynamicChart`click$17268$27858]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17268$27858, {{{1., 0.}, {0., 
                    1.}}, {-0.04450418679126278, -0.19498558243636477`}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17268$27858}]], 
                    "DelayedClickEffect"]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.6927937030769646`}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17272$27858, 
                    FEPrivate`Not[DynamicChart`click$17272$27858]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17272$27858, {{{1., 0.}, {0., 
                    1.}}, {-0.1949855824363647, -0.044504186791262994`}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17272$27858}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 4]& , TagBoxNote -> "4"], 
                    StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
                    Style[4, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17260$27858, 
                    FEPrivate`Not[DynamicChart`click$17260$27858]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17260$27858, {{{1., 0.}, {0., 
                    1.}}, {-0.1246979603717467, 0.156366296493606}}, {{1, 
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17260$27858}]], 
                    "DelayedClickEffect"], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 5]& , TagBoxNote -> "5"], 
                    StyleBox["5", {}, StripOnInput -> False]], Annotation[#, 
                    Style[5, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17264$27858, 
                    FEPrivate`Not[DynamicChart`click$17264$27858]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17264$27858, {{{1., 0.}, {0., 1.}}, {
                    0.19498558243636474`, 0.04450418679126288}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17264$27858}]], 
                    "DelayedClickEffect"], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 4]& , TagBoxNote -> "4"], 
                    StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
                    Style[4, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17268$27858, 
                    FEPrivate`Not[DynamicChart`click$17268$27858]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17268$27858, {{{1., 0.}, {0., 
                    1.}}, {-0.04450418679126278, -0.19498558243636477`}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17268$27858}]], 
                    "DelayedClickEffect"], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17272$27858, 
                    FEPrivate`Not[DynamicChart`click$17272$27858]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17272$27858, {{{1., 0.}, {0., 
                    1.}}, {-0.1949855824363647, -0.044504186791262994`}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17272$27858}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"0.8\"", 25, StripOnInput -> False], "None", 
                "None", 
                StyleBox["\"1.\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.178927, 0.305394, 0.933501], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.11928466666666668`, 0.203596, 0.622334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.178927`", ",", "0.305394`", ",", "0.933501`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.178927, 0.305394, 0.933501]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.178927, 0.305394, 0.933501], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.819984, 0.859297, 0.982692], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.546656, 0.5728646666666667, 0.655128], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.819984`", ",", "0.859297`", ",", "0.982692`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.819984, 0.859297, 0.982692]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.819984, 0.859297, 0.982692], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.992503, 0.986373, 0.425376], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6616686666666667, 0.6575820000000001, 0.283584], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.992503`", ",", "0.986373`", ",", "0.425376`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.992503, 0.986373, 0.425376]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.992503, 0.986373, 0.425376], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5448793333333334, 0.089418, 0.10947866666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "None", ",", "None", ",", "None"}], 
                    "}"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"14\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              
              DynamicModuleBox[{
               DynamicChart`click$16853$27877 = False, 
                DynamicChart`click$16857$27877 = False, 
                DynamicChart`click$16861$27877 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.7853981633974483, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 3]& , TagBoxNote -> "3"], 
                    StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                    Style[3, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$16853$27877, 
                    FEPrivate`Not[DynamicChart`click$16853$27877]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$16853$27877, {{{1., 0.}, {0., 
                    1.}}, {-0.07653668647301795, 0.18477590650225736`}}, {{1, 
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$16853$27877}]], 
                    "DelayedClickEffect"]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.984192, 0.987731, 0.911643]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.5707963267948966`, 
                    0.7853981633974483}]}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 3]& , TagBoxNote -> "3"], 
                    StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                    Style[3, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$16857$27877, 
                    FEPrivate`Not[DynamicChart`click$16857$27877]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$16857$27877, {{{1., 0.}, {0., 1.}}, {
                    0.18477590650225736`, -0.07653668647301796}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$16857$27877}]], 
                    "DelayedClickEffect"]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.5707963267948966`}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 2]& , 
                    TagBoxNote -> "2"], 
                    StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                    Style[2, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$16861$27877, 
                    FEPrivate`Not[DynamicChart`click$16861$27877]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$16861$27877, {{{1., 0.}, {0., 
                    1.}}, {-0.1414213562373095, -0.14142135623730953`}}, {{1, 
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$16861$27877}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 3]& , TagBoxNote -> "3"], 
                    StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                    Style[3, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$16853$27877, 
                    FEPrivate`Not[DynamicChart`click$16853$27877]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$16853$27877, {{{1., 0.}, {0., 
                    1.}}, {-0.07653668647301795, 0.18477590650225736`}}, {{1, 
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$16853$27877}]], 
                    "DelayedClickEffect"], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 3]& , TagBoxNote -> "3"], 
                    StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                    Style[3, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$16857$27877, 
                    FEPrivate`Not[DynamicChart`click$16857$27877]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$16857$27877, {{{1., 0.}, {0., 1.}}, {
                    0.18477590650225736`, -0.07653668647301796}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$16857$27877}]], 
                    "DelayedClickEffect"], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 2]& , TagBoxNote -> "2"], 
                    StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                    Style[2, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$16861$27877, 
                    FEPrivate`Not[DynamicChart`click$16861$27877]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$16861$27877, {{{1., 0.}, {0., 
                    1.}}, {-0.1414213562373095, -0.14142135623730953`}}, {{1, 
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$16861$27877}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"0.8\"", 25, StripOnInput -> False], "None", 
                StyleBox["\"0.933333\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.178927, 0.305394, 0.933501], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.11928466666666668`, 0.203596, 0.622334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.178927`", ",", "0.305394`", ",", "0.933501`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.178927, 0.305394, 0.933501]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.178927, 0.305394, 0.933501], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.984192, 0.987731, 0.911643], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.656128, 0.6584873333333334, 0.607762], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.984192`", ",", "0.987731`", ",", "0.911643`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.984192, 0.987731, 0.911643]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.984192, 0.987731, 0.911643], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5448793333333334, 0.089418, 0.10947866666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "None", ",", "None"}], "}"}], 
                    "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"8\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              
              DynamicModuleBox[{
               DynamicChart`click$17338$27895 = False, 
                DynamicChart`click$17342$27895 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 3.141592653589793}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17338$27895, 
                    FEPrivate`Not[DynamicChart`click$17338$27895]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17338$27895, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17338$27895}]], 
                    "DelayedClickEffect"]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17342$27895, 
                    FEPrivate`Not[DynamicChart`click$17342$27895]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17342$27895, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17342$27895}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17338$27895, 
                    FEPrivate`Not[DynamicChart`click$17338$27895]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17338$27895, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17338$27895}]], 
                    "DelayedClickEffect"], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17342$27895, 
                    FEPrivate`Not[DynamicChart`click$17342$27895]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17342$27895, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17342$27895}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"0.8\"", 25, StripOnInput -> False], 
                StyleBox["\"0.866667\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.178927, 0.305394, 0.933501], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.11928466666666668`, 0.203596, 0.622334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.178927`", ",", "0.305394`", ",", "0.933501`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.178927, 0.305394, 0.933501]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.178927, 0.305394, 0.933501], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5448793333333334, 0.089418, 0.10947866666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "None"}], "}"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"2\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )], 
        GraphicsBox[{{}, {}, {
           {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
            0.5]}], {{{}, {}}, {}}, {}}, {{{}, {}}, {}}, {}, {}}, {{}, {}}, \
{{{}, {}, {}, {}}, {}}},
         ContentSelectable->False,
         DisplayFunction->Identity,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         PlotRange->{{-1., 1.}, {-1., 1.}},
         PlotRangePadding->Scaled[0.05]], 
        GraphicsBox[{{}, {}, {
           {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
            0.5]}], {{{}, {}}, {}}, {}}, {{{}, {}}, {}}, {}, {}}, {{}, {}}, \
{{{}, {}, {}, {}}, {}}},
         ContentSelectable->False,
         DisplayFunction->Identity,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         PlotRange->{{-1., 1.}, {-1., 1.}},
         PlotRangePadding->Scaled[0.05]], 
        GraphicsBox[{{}, {}, {
           {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
            0.5]}], {{{}, {}}, {}}, {}}, {{{}, {}}, {}}, {}, {}}, {{}, {}}, \
{{{}, {}, {}, {}}, {}}},
         ContentSelectable->False,
         DisplayFunction->Identity,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         PlotRange->{{-1., 1.}, {-1., 1.}},
         PlotRangePadding->Scaled[0.05]], 
        GraphicsBox[{{}, {}, {
           {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
            0.5]}], {{{}, {}}, {}}, {}}, {{{}, {}}, {}}, {}, {}}, {{}, {}}, \
{{{}, {}, {}, {}}, {}}},
         ContentSelectable->False,
         DisplayFunction->Identity,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         PlotRange->{{-1., 1.}, {-1., 1.}},
         PlotRangePadding->Scaled[0.05]], 
        GraphicsBox[{{}, {}, {
           {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
            0.5]}], {{{}, {}}, {}}, {}}, {{{}, {}}, {}}, {}, {}}, {{}, {}}, \
{{{}, {}, {}, {}}, {}}},
         ContentSelectable->False,
         DisplayFunction->Identity,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         PlotRange->{{-1., 1.}, {-1., 1.}},
         PlotRangePadding->Scaled[0.05]], 
        GraphicsBox[{{}, {}, {
           {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
            0.5]}], {{{}, {}}, {}}, {}}, {{{}, {}}, {}}, {}, {}}, {{}, {}}, \
{{{}, {}, {}, {}}, {}}},
         ContentSelectable->False,
         DisplayFunction->Identity,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         PlotRange->{{-1., 1.}, {-1., 1.}},
         PlotRangePadding->Scaled[0.05]], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              DynamicModuleBox[{DynamicChart`click$17058$27910 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17058$27910, 
                    FEPrivate`Not[DynamicChart`click$17058$27910]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17058$27910, {{{1., 0.}, {0., 1.}}, {
                    0.2, 0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17058$27910}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17058$27910, 
                    FEPrivate`Not[DynamicChart`click$17058$27910]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17058$27910, {{{1., 0.}, {0., 1.}}, {
                    0.2, 0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17058$27910}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"1.\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5448793333333334, 0.089418, 
                    0.10947866666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", "None", "}"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"1\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )]},
       {
        StyleBox["\<\"MUR\"\>",
         StripOnInput->False,
         FontSize->20], 
        GraphicsBox[{{}, {}, {
           {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
            
            0.5]}], {{{}, {}}, {}}, {}}, {{{}, {}}, {}}, {}, {}}, {{}, {}}, \
{{{}, {}, {}, {}}, {}}},
         ContentSelectable->False,
         DisplayFunction->Identity,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         PlotRange->{{-1., 1.}, {-1., 1.}},
         PlotRangePadding->Scaled[0.05]], 
        GraphicsBox[{{}, {}, {
           {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
            0.5]}], {{{}, {}}, {}}, {}}, {{{}, {}}, {}}, {}, {}}, {{}, {}}, \
{{{}, {}, {}, {}}, {}}},
         ContentSelectable->False,
         DisplayFunction->Identity,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         PlotRange->{{-1., 1.}, {-1., 1.}},
         PlotRangePadding->Scaled[0.05]], 
        GraphicsBox[{{}, {}, {
           {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
            0.5]}], {{{}, {}}, {}}, {}}, {{{}, {}}, {}}, {}, {}}, {{}, {}}, \
{{{}, {}, {}, {}}, {}}},
         ContentSelectable->False,
         DisplayFunction->Identity,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         PlotRange->{{-1., 1.}, {-1., 1.}},
         PlotRangePadding->Scaled[0.05]], 
        GraphicsBox[{{}, {}, {
           {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
            0.5]}], {{{}, {}}, {}}, {}}, {{{}, {}}, {}}, {}, {}}, {{}, {}}, \
{{{}, {}, {}, {}}, {}}},
         ContentSelectable->False,
         DisplayFunction->Identity,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         PlotRange->{{-1., 1.}, {-1., 1.}},
         PlotRangePadding->Scaled[0.05]], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              
              DynamicModuleBox[{
               DynamicChart`click$17655$27929 = False, 
                DynamicChart`click$17659$27929 = False, 
                DynamicChart`click$17663$27929 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.6283185307179586, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 9]& , TagBoxNote -> "9"], 
                    StyleBox["9", {}, StripOnInput -> False]], Annotation[#, 
                    Style[9, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17655$27929, 
                    FEPrivate`Not[DynamicChart`click$17655$27929]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17655$27929, {{{1., 0.}, {0., 1.}}, {
                    0.06180339887498949, 0.1902113032590307}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17655$27929}]], 
                    "DelayedClickEffect"]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.984192, 0.987731, 0.911643]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.7227136331111543`, -0.6283185307179586}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 5]& , 
                    TagBoxNote -> "5"], 
                    StyleBox["5", {}, StripOnInput -> False]], Annotation[#, 
                    Style[5, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17659$27929, 
                    FEPrivate`Not[DynamicChart`click$17659$27929]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17659$27929, {{{1., 0.}, {0., 
                    1.}}, {-0.020905692653530712`, -0.19890437907365466`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17659$27929}]], 
                    "DelayedClickEffect"]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.7227136331111543`}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17663$27929, 
                    FEPrivate`Not[DynamicChart`click$17663$27929]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17663$27929, {{{1., 0.}, {0., 
                    1.}}, {-0.19562952014676116`, -0.04158233816355186}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17663$27929}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 9]& , TagBoxNote -> "9"], 
                    StyleBox["9", {}, StripOnInput -> False]], Annotation[#, 
                    Style[9, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17655$27929, 
                    FEPrivate`Not[DynamicChart`click$17655$27929]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17655$27929, {{{1., 0.}, {0., 1.}}, {
                    0.06180339887498949, 0.1902113032590307}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17655$27929}]], 
                    "DelayedClickEffect"], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 5]& , TagBoxNote -> "5"], 
                    StyleBox["5", {}, StripOnInput -> False]], Annotation[#, 
                    Style[5, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17659$27929, 
                    FEPrivate`Not[DynamicChart`click$17659$27929]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17659$27929, {{{1., 0.}, {0., 
                    1.}}, {-0.020905692653530712`, -0.19890437907365466`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17659$27929}]], 
                    "DelayedClickEffect"], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17663$27929, 
                    FEPrivate`Not[DynamicChart`click$17663$27929]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17663$27929, {{{1., 0.}, {0., 
                    1.}}, {-0.19562952014676116`, -0.04158233816355186}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17663$27929}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"0.8\"", 25, StripOnInput -> False], "None", 
                StyleBox["\"0.933333\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.178927, 0.305394, 0.933501], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.11928466666666668`, 0.203596, 0.622334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.178927`", ",", "0.305394`", ",", "0.933501`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.178927, 0.305394, 0.933501]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.178927, 0.305394, 0.933501], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.984192, 0.987731, 0.911643], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.656128, 0.6584873333333334, 0.607762], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.984192`", ",", "0.987731`", ",", "0.911643`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.984192, 0.987731, 0.911643]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.984192, 0.987731, 0.911643], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5448793333333334, 0.089418, 0.10947866666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "None", ",", "None"}], "}"}], 
                    "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"15\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              
              DynamicModuleBox[{
               DynamicChart`click$18215$27947 = False, 
                DynamicChart`click$18219$27947 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.4279966607226333`, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 8]& , TagBoxNote -> "8"], 
                    StyleBox["8", {}, StripOnInput -> False]], Annotation[#, 
                    Style[8, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$18215$27947, 
                    FEPrivate`Not[DynamicChart`click$18215$27947]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$18215$27947, {{{1., 0.}, {0., 1.}}, {
                    0.13097214678905703`, 0.15114991487085166`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$18215$27947}]], 
                    "DelayedClickEffect"]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.4279966607226333`}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 3]& , 
                    TagBoxNote -> "3"], 
                    StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                    Style[3, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$18219$27947, 
                    FEPrivate`Not[DynamicChart`click$18219$27947]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$18219$27947, {{{1., 0.}, {0., 
                    1.}}, {-0.130972146789057, -0.15114991487085166`}}, {{1, 
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$18219$27947}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 8]& , TagBoxNote -> "8"], 
                    StyleBox["8", {}, StripOnInput -> False]], Annotation[#, 
                    Style[8, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$18215$27947, 
                    FEPrivate`Not[DynamicChart`click$18215$27947]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$18215$27947, {{{1., 0.}, {0., 1.}}, {
                    0.13097214678905703`, 0.15114991487085166`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$18215$27947}]], 
                    "DelayedClickEffect"], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 3]& , TagBoxNote -> "3"], 
                    StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                    Style[3, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$18219$27947, 
                    FEPrivate`Not[DynamicChart`click$18219$27947]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$18219$27947, {{{1., 0.}, {0., 
                    1.}}, {-0.130972146789057, -0.15114991487085166`}}, {{1, 
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$18219$27947}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"0.8\"", 25, StripOnInput -> False], 
                StyleBox["\"0.866667\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.178927, 0.305394, 0.933501], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.11928466666666668`, 0.203596, 0.622334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.178927`", ",", "0.305394`", ",", "0.933501`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.178927, 0.305394, 0.933501]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.178927, 0.305394, 0.933501], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5448793333333334, 0.089418, 0.10947866666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "None"}], "}"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"11\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              
              DynamicModuleBox[{
               DynamicChart`click$17755$27966 = False, 
                DynamicChart`click$17759$27966 = False, 
                DynamicChart`click$17763$27966 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.6283185307179586, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 9]& , TagBoxNote -> "9"], 
                    StyleBox["9", {}, StripOnInput -> False]], Annotation[#, 
                    Style[9, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17755$27966, 
                    FEPrivate`Not[DynamicChart`click$17755$27966]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17755$27966, {{{1., 0.}, {0., 1.}}, {
                    0.06180339887498949, 0.1902113032590307}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17755$27966}]], 
                    "DelayedClickEffect"]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.984192, 0.987731, 0.911643]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.7227136331111543`, -0.6283185307179586}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 5]& , 
                    TagBoxNote -> "5"], 
                    StyleBox["5", {}, StripOnInput -> False]], Annotation[#, 
                    Style[5, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17759$27966, 
                    FEPrivate`Not[DynamicChart`click$17759$27966]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17759$27966, {{{1., 0.}, {0., 
                    1.}}, {-0.020905692653530712`, -0.19890437907365466`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17759$27966}]], 
                    "DelayedClickEffect"]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.7227136331111543`}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17763$27966, 
                    FEPrivate`Not[DynamicChart`click$17763$27966]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17763$27966, {{{1., 0.}, {0., 
                    1.}}, {-0.19562952014676116`, -0.04158233816355186}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17763$27966}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 9]& , TagBoxNote -> "9"], 
                    StyleBox["9", {}, StripOnInput -> False]], Annotation[#, 
                    Style[9, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17755$27966, 
                    FEPrivate`Not[DynamicChart`click$17755$27966]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17755$27966, {{{1., 0.}, {0., 1.}}, {
                    0.06180339887498949, 0.1902113032590307}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17755$27966}]], 
                    "DelayedClickEffect"], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 5]& , TagBoxNote -> "5"], 
                    StyleBox["5", {}, StripOnInput -> False]], Annotation[#, 
                    Style[5, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17759$27966, 
                    FEPrivate`Not[DynamicChart`click$17759$27966]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17759$27966, {{{1., 0.}, {0., 
                    1.}}, {-0.020905692653530712`, -0.19890437907365466`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17759$27966}]], 
                    "DelayedClickEffect"], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17763$27966, 
                    FEPrivate`Not[DynamicChart`click$17763$27966]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17763$27966, {{{1., 0.}, {0., 
                    1.}}, {-0.19562952014676116`, -0.04158233816355186}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17763$27966}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"0.8\"", 25, StripOnInput -> False], "None", 
                StyleBox["\"0.933333\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.178927, 0.305394, 0.933501], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.11928466666666668`, 0.203596, 0.622334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.178927`", ",", "0.305394`", ",", "0.933501`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.178927, 0.305394, 0.933501]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.178927, 0.305394, 0.933501], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.984192, 0.987731, 0.911643], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.656128, 0.6584873333333334, 0.607762], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.984192`", ",", "0.987731`", ",", "0.911643`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.984192, 0.987731, 0.911643]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.984192, 0.987731, 0.911643], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5448793333333334, 0.089418, 0.10947866666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "None", ",", "None"}], "}"}], 
                    "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"15\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              
              DynamicModuleBox[{
               DynamicChart`click$18296$27985 = False, 
                DynamicChart`click$18300$27985 = False, 
                DynamicChart`click$18304$27985 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.2855993321445265, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 6]& , TagBoxNote -> "6"], 
                    StyleBox["6", {}, StripOnInput -> False]], Annotation[#, 
                    Style[6, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$18296$27985, 
                    FEPrivate`Not[DynamicChart`click$18296$27985]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$18296$27985, {{{1., 0.}, {0., 1.}}, {
                    0.028462967654657025`, 0.19796428837618654`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$18296$27985}]], 
                    "DelayedClickEffect"]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.984192, 0.987731, 0.911643]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 
                    1., {-2.57039398930074, -0.2855993321445265}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 4]& , 
                    TagBoxNote -> "4"], 
                    StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
                    Style[4, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$18300$27985, 
                    FEPrivate`Not[DynamicChart`click$18300$27985]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$18300$27985, {{{1., 0.}, {0., 1.}}, {
                    0.028462967654657025`, -0.19796428837618654`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$18300$27985}]], 
                    "DelayedClickEffect"]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.57039398930074}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$18304$27985, 
                    FEPrivate`Not[DynamicChart`click$18304$27985]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$18304$27985, {{{1., 0.}, {0., 
                    1.}}, {-0.1918985947228995, -0.05634651136828594}}, {{1, 
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$18304$27985}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 6]& , TagBoxNote -> "6"], 
                    StyleBox["6", {}, StripOnInput -> False]], Annotation[#, 
                    Style[6, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$18296$27985, 
                    FEPrivate`Not[DynamicChart`click$18296$27985]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$18296$27985, {{{1., 0.}, {0., 1.}}, {
                    0.028462967654657025`, 0.19796428837618654`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$18296$27985}]], 
                    "DelayedClickEffect"], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 4]& , TagBoxNote -> "4"], 
                    StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
                    Style[4, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$18300$27985, 
                    FEPrivate`Not[DynamicChart`click$18300$27985]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$18300$27985, {{{1., 0.}, {0., 1.}}, {
                    0.028462967654657025`, -0.19796428837618654`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$18300$27985}]], 
                    "DelayedClickEffect"], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$18304$27985, 
                    FEPrivate`Not[DynamicChart`click$18304$27985]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$18304$27985, {{{1., 0.}, {0., 
                    1.}}, {-0.1918985947228995, -0.05634651136828594}}, {{1, 
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$18304$27985}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"0.8\"", 25, StripOnInput -> False], "None", 
                StyleBox["\"0.933333\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.178927, 0.305394, 0.933501], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.11928466666666668`, 0.203596, 0.622334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.178927`", ",", "0.305394`", ",", "0.933501`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.178927, 0.305394, 0.933501]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.178927, 0.305394, 0.933501], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.984192, 0.987731, 0.911643], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.656128, 0.6584873333333334, 0.607762], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.984192`", ",", "0.987731`", ",", "0.911643`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.984192, 0.987731, 0.911643]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.984192, 0.987731, 0.911643], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5448793333333334, 0.089418, 0.10947866666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "None", ",", "None"}], "}"}], 
                    "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"11\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              
              DynamicModuleBox[{
               DynamicChart`click$17834$28005 = False, 
                DynamicChart`click$17838$28005 = False, 
                DynamicChart`click$17842$28005 = False, 
                DynamicChart`click$17846$28005 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.356194490192345, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17834$28005, 
                    FEPrivate`Not[DynamicChart`click$17834$28005]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17834$28005, {{{1., 0.}, {0., 
                    1.}}, {-0.18477590650225736`, 0.07653668647301798}}, {{1, 
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17834$28005}]], 
                    "DelayedClickEffect"]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.819984, 0.859297, 0.982692]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 2.356194490192345}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 3]& , 
                    TagBoxNote -> "3"], 
                    StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                    Style[3, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17838$28005, 
                    FEPrivate`Not[DynamicChart`click$17838$28005]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17838$28005, {{{1., 0.}, {0., 1.}}, {
                    0.07653668647301798, 0.18477590650225736`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17838$28005}]], 
                    "DelayedClickEffect"]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.992503, 0.986373, 0.425376]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-2.356194490192345, 0.}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 3]& , 
                    TagBoxNote -> "3"], 
                    StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                    Style[3, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17842$28005, 
                    FEPrivate`Not[DynamicChart`click$17842$28005]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17842$28005, {{{1., 0.}, {0., 1.}}, {
                    0.07653668647301798, -0.18477590650225736`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17842$28005}]], 
                    "DelayedClickEffect"]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.356194490192345}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17846$28005, 
                    FEPrivate`Not[DynamicChart`click$17846$28005]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17846$28005, {{{1., 0.}, {0., 
                    1.}}, {-0.18477590650225736`, -0.07653668647301798}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17846$28005}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17834$28005, 
                    FEPrivate`Not[DynamicChart`click$17834$28005]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17834$28005, {{{1., 0.}, {0., 
                    1.}}, {-0.18477590650225736`, 0.07653668647301798}}, {{1, 
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17834$28005}]], 
                    "DelayedClickEffect"], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 3]& , TagBoxNote -> "3"], 
                    StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                    Style[3, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17838$28005, 
                    FEPrivate`Not[DynamicChart`click$17838$28005]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17838$28005, {{{1., 0.}, {0., 1.}}, {
                    0.07653668647301798, 0.18477590650225736`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17838$28005}]], 
                    "DelayedClickEffect"], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 3]& , TagBoxNote -> "3"], 
                    StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                    Style[3, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17842$28005, 
                    FEPrivate`Not[DynamicChart`click$17842$28005]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17842$28005, {{{1., 0.}, {0., 1.}}, {
                    0.07653668647301798, -0.18477590650225736`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17842$28005}]], 
                    "DelayedClickEffect"], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17846$28005, 
                    FEPrivate`Not[DynamicChart`click$17846$28005]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17846$28005, {{{1., 0.}, {0., 
                    1.}}, {-0.18477590650225736`, -0.07653668647301798}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17846$28005}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"0.8\"", 25, StripOnInput -> False], "None", 
                "None", 
                StyleBox["\"1.\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.178927, 0.305394, 0.933501], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.11928466666666668`, 0.203596, 0.622334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.178927`", ",", "0.305394`", ",", "0.933501`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.178927, 0.305394, 0.933501]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.178927, 0.305394, 0.933501], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.819984, 0.859297, 0.982692], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.546656, 0.5728646666666667, 0.655128], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.819984`", ",", "0.859297`", ",", "0.982692`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.819984, 0.859297, 0.982692]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.819984, 0.859297, 0.982692], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.992503, 0.986373, 0.425376], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6616686666666667, 0.6575820000000001, 0.283584], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.992503`", ",", "0.986373`", ",", "0.425376`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.992503, 0.986373, 0.425376]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.992503, 0.986373, 0.425376], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5448793333333334, 0.089418, 0.10947866666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "None", ",", "None", ",", "None"}], 
                    "}"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"8\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              
              DynamicModuleBox[{
               DynamicChart`click$18375$28025 = False, 
                DynamicChart`click$18379$28025 = False, 
                DynamicChart`click$18383$28025 = False, 
                DynamicChart`click$18387$28025 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.356194490192345, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$18375$28025, 
                    FEPrivate`Not[DynamicChart`click$18375$28025]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$18375$28025, {{{1., 0.}, {0., 
                    1.}}, {-0.18477590650225736`, 0.07653668647301798}}, {{1, 
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$18375$28025}]], 
                    "DelayedClickEffect"]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.819984, 0.859297, 0.982692]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 2.356194490192345}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 3]& , 
                    TagBoxNote -> "3"], 
                    StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                    Style[3, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$18379$28025, 
                    FEPrivate`Not[DynamicChart`click$18379$28025]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$18379$28025, {{{1., 0.}, {0., 1.}}, {
                    0.07653668647301798, 0.18477590650225736`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$18379$28025}]], 
                    "DelayedClickEffect"]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.992503, 0.986373, 0.425376]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-2.356194490192345, 0.}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 3]& , 
                    TagBoxNote -> "3"], 
                    StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                    Style[3, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$18383$28025, 
                    FEPrivate`Not[DynamicChart`click$18383$28025]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$18383$28025, {{{1., 0.}, {0., 1.}}, {
                    0.07653668647301798, -0.18477590650225736`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$18383$28025}]], 
                    "DelayedClickEffect"]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.356194490192345}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$18387$28025, 
                    FEPrivate`Not[DynamicChart`click$18387$28025]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$18387$28025, {{{1., 0.}, {0., 
                    1.}}, {-0.18477590650225736`, -0.07653668647301798}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$18387$28025}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$18375$28025, 
                    FEPrivate`Not[DynamicChart`click$18375$28025]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$18375$28025, {{{1., 0.}, {0., 
                    1.}}, {-0.18477590650225736`, 0.07653668647301798}}, {{1, 
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$18375$28025}]], 
                    "DelayedClickEffect"], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 3]& , TagBoxNote -> "3"], 
                    StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                    Style[3, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$18379$28025, 
                    FEPrivate`Not[DynamicChart`click$18379$28025]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$18379$28025, {{{1., 0.}, {0., 1.}}, {
                    0.07653668647301798, 0.18477590650225736`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$18379$28025}]], 
                    "DelayedClickEffect"], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 3]& , TagBoxNote -> "3"], 
                    StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                    Style[3, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$18383$28025, 
                    FEPrivate`Not[DynamicChart`click$18383$28025]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$18383$28025, {{{1., 0.}, {0., 1.}}, {
                    0.07653668647301798, -0.18477590650225736`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$18383$28025}]], 
                    "DelayedClickEffect"], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$18387$28025, 
                    FEPrivate`Not[DynamicChart`click$18387$28025]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$18387$28025, {{{1., 0.}, {0., 
                    1.}}, {-0.18477590650225736`, -0.07653668647301798}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$18387$28025}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"0.8\"", 25, StripOnInput -> False], "None", 
                "None", 
                StyleBox["\"1.\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.178927, 0.305394, 0.933501], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.11928466666666668`, 0.203596, 0.622334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.178927`", ",", "0.305394`", ",", "0.933501`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.178927, 0.305394, 0.933501]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.178927, 0.305394, 0.933501], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.819984, 0.859297, 0.982692], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.546656, 0.5728646666666667, 0.655128], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.819984`", ",", "0.859297`", ",", "0.982692`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.819984, 0.859297, 0.982692]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.819984, 0.859297, 0.982692], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.992503, 0.986373, 0.425376], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6616686666666667, 0.6575820000000001, 0.283584], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.992503`", ",", "0.986373`", ",", "0.425376`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.992503, 0.986373, 0.425376]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.992503, 0.986373, 0.425376], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5448793333333334, 0.089418, 0.10947866666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "None", ",", "None", ",", "None"}], 
                    "}"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"8\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              
              DynamicModuleBox[{
               DynamicChart`click$17924$28043 = False, 
                DynamicChart`click$17928$28043 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.5707963267948966`, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 3]& , TagBoxNote -> "3"], 
                    StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                    Style[3, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17924$28043, 
                    FEPrivate`Not[DynamicChart`click$17924$28043]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17924$28043, {{{1., 0.}, {0., 1.}}, {
                    0.14142135623730953`, 0.1414213562373095}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17924$28043}]], 
                    "DelayedClickEffect"]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.5707963267948966`}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17928$28043, 
                    FEPrivate`Not[DynamicChart`click$17928$28043]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17928$28043, {{{1., 0.}, {0., 
                    1.}}, {-0.1414213562373095, -0.14142135623730953`}}, {{1, 
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17928$28043}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 3]& , TagBoxNote -> "3"], 
                    StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                    Style[3, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17924$28043, 
                    FEPrivate`Not[DynamicChart`click$17924$28043]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17924$28043, {{{1., 0.}, {0., 1.}}, {
                    0.14142135623730953`, 0.1414213562373095}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17924$28043}]], 
                    "DelayedClickEffect"], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17928$28043, 
                    FEPrivate`Not[DynamicChart`click$17928$28043]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17928$28043, {{{1., 0.}, {0., 
                    1.}}, {-0.1414213562373095, -0.14142135623730953`}}, {{1, 
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17928$28043}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"0.8\"", 25, StripOnInput -> False], 
                StyleBox["\"0.866667\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.178927, 0.305394, 0.933501], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.11928466666666668`, 0.203596, 0.622334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.178927`", ",", "0.305394`", ",", "0.933501`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.178927, 0.305394, 0.933501]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.178927, 0.305394, 0.933501], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5448793333333334, 0.089418, 0.10947866666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "None"}], "}"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"4\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              
              DynamicModuleBox[{
               DynamicChart`click$18465$28061 = False, 
                DynamicChart`click$18469$28061 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.5707963267948966`, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 3]& , TagBoxNote -> "3"], 
                    StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                    Style[3, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$18465$28061, 
                    FEPrivate`Not[DynamicChart`click$18465$28061]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$18465$28061, {{{1., 0.}, {0., 1.}}, {
                    0.14142135623730953`, 0.1414213562373095}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$18465$28061}]], 
                    "DelayedClickEffect"]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.5707963267948966`}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$18469$28061, 
                    FEPrivate`Not[DynamicChart`click$18469$28061]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$18469$28061, {{{1., 0.}, {0., 
                    1.}}, {-0.1414213562373095, -0.14142135623730953`}}, {{1, 
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$18469$28061}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 3]& , TagBoxNote -> "3"], 
                    StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                    Style[3, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$18465$28061, 
                    FEPrivate`Not[DynamicChart`click$18465$28061]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$18465$28061, {{{1., 0.}, {0., 1.}}, {
                    0.14142135623730953`, 0.1414213562373095}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$18465$28061}]], 
                    "DelayedClickEffect"], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$18469$28061, 
                    FEPrivate`Not[DynamicChart`click$18469$28061]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$18469$28061, {{{1., 0.}, {0., 
                    1.}}, {-0.1414213562373095, -0.14142135623730953`}}, {{1, 
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$18469$28061}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"0.8\"", 25, StripOnInput -> False], 
                StyleBox["\"0.866667\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.178927, 0.305394, 0.933501], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.11928466666666668`, 0.203596, 0.622334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.178927`", ",", "0.305394`", ",", "0.933501`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.178927, 0.305394, 0.933501]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.178927, 0.305394, 0.933501], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5448793333333334, 0.089418, 0.10947866666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "None"}], "}"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"4\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              DynamicModuleBox[{DynamicChart`click$17990$28076 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17990$28076, 
                    FEPrivate`Not[DynamicChart`click$17990$28076]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17990$28076, {{{1., 0.}, {0., 1.}}, {
                    0.2, 0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17990$28076}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$17990$28076, 
                    FEPrivate`Not[DynamicChart`click$17990$28076]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$17990$28076, {{{1., 0.}, {0., 1.}}, {
                    0.2, 0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$17990$28076}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"1.\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5448793333333334, 0.089418, 
                    0.10947866666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", "None", "}"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"1\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              DynamicModuleBox[{DynamicChart`click$18531$28091 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$18531$28091, 
                    FEPrivate`Not[DynamicChart`click$18531$28091]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$18531$28091, {{{1., 0.}, {0., 1.}}, {
                    0.2, 0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$18531$28091}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$18531$28091, 
                    FEPrivate`Not[DynamicChart`click$18531$28091]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$18531$28091, {{{1., 0.}, {0., 1.}}, {
                    0.2, 0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$18531$28091}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"1.\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5448793333333334, 0.089418, 
                    0.10947866666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", "None", "}"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"1\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              DynamicModuleBox[{DynamicChart`click$18048$28106 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$18048$28106, 
                    FEPrivate`Not[DynamicChart`click$18048$28106]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$18048$28106, {{{1., 0.}, {0., 1.}}, {
                    0.2, 0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$18048$28106}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$18048$28106, 
                    FEPrivate`Not[DynamicChart`click$18048$28106]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$18048$28106, {{{1., 0.}, {0., 1.}}, {
                    0.2, 0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$18048$28106}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"1.\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5448793333333334, 0.089418, 
                    0.10947866666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", "None", "}"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"1\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )]},
       {
        StyleBox["\<\"LYE\"\>",
         StripOnInput->False,
         FontSize->20], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              DynamicModuleBox[{DynamicChart`click$18599$28121 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$18599$28121, 
                    FEPrivate`Not[DynamicChart`click$18599$28121]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$18599$28121, {{{1., 0.}, {0., 1.}}, {
                    0.2, 0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$18599$28121}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$18599$28121, 
                    FEPrivate`Not[DynamicChart`click$18599$28121]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$18599$28121, {{{1., 0.}, {0., 1.}}, {
                    0.2, 0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$18599$28121}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"0.8\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5448793333333334, 0.089418, 
                    0.10947866666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", "None", "}"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"1\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              DynamicModuleBox[{DynamicChart`click$19052$28136 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$19052$28136, 
                    FEPrivate`Not[DynamicChart`click$19052$28136]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$19052$28136, {{{1., 0.}, {0., 1.}}, {
                    0.2, 0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$19052$28136}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$19052$28136, 
                    FEPrivate`Not[DynamicChart`click$19052$28136]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$19052$28136, {{{1., 0.}, {0., 1.}}, {
                    0.2, 0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$19052$28136}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"0.8\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5448793333333334, 0.089418, 
                    0.10947866666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", "None", "}"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"1\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              DynamicModuleBox[{DynamicChart`click$18665$28151 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$18665$28151, 
                    FEPrivate`Not[DynamicChart`click$18665$28151]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$18665$28151, {{{1., 0.}, {0., 1.}}, {
                    0.2, 0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$18665$28151}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$18665$28151, 
                    FEPrivate`Not[DynamicChart`click$18665$28151]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$18665$28151, {{{1., 0.}, {0., 1.}}, {
                    0.2, 0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$18665$28151}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"0.8\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5448793333333334, 0.089418, 
                    0.10947866666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", "None", "}"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"1\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              DynamicModuleBox[{DynamicChart`click$19112$28166 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$19112$28166, 
                    FEPrivate`Not[DynamicChart`click$19112$28166]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$19112$28166, {{{1., 0.}, {0., 1.}}, {
                    0.2, 0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$19112$28166}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$19112$28166, 
                    FEPrivate`Not[DynamicChart`click$19112$28166]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$19112$28166, {{{1., 0.}, {0., 1.}}, {
                    0.2, 0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$19112$28166}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"0.8\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5448793333333334, 0.089418, 
                    0.10947866666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", "None", "}"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"1\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )], 
        GraphicsBox[{{}, {}, {
           {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
            0.5]}], {{{}, {}}, {}}, {}}, {{{}, {}}, {}}, {}, {}}, {{}, {}}, \
{{{}, {}, {}, {}}, {}}},
         ContentSelectable->False,
         DisplayFunction->Identity,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         PlotRange->{{-1., 1.}, {-1., 1.}},
         PlotRangePadding->Scaled[0.05]], 
        GraphicsBox[{{}, {}, {
           {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
            0.5]}], {{{}, {}}, {}}, {}}, {{{}, {}}, {}}, {}, {}}, {{}, {}}, \
{{{}, {}, {}, {}}, {}}},
         ContentSelectable->False,
         DisplayFunction->Identity,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         PlotRange->{{-1., 1.}, {-1., 1.}},
         PlotRangePadding->Scaled[0.05]], 
        GraphicsBox[{{}, {}, {
           {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
            0.5]}], {{{}, {}}, {}}, {}}, {{{}, {}}, {}}, {}, {}}, {{}, {}}, \
{{{}, {}, {}, {}}, {}}},
         ContentSelectable->False,
         DisplayFunction->Identity,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         PlotRange->{{-1., 1.}, {-1., 1.}},
         PlotRangePadding->Scaled[0.05]], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              
              DynamicModuleBox[{
               DynamicChart`click$19217$28184 = False, 
                DynamicChart`click$19221$28184 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 3.141592653589793}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$19217$28184, 
                    FEPrivate`Not[DynamicChart`click$19217$28184]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$19217$28184, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$19217$28184}]], 
                    "DelayedClickEffect"]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$19221$28184, 
                    FEPrivate`Not[DynamicChart`click$19221$28184]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$19221$28184, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$19221$28184}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$19217$28184, 
                    FEPrivate`Not[DynamicChart`click$19217$28184]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$19217$28184, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$19217$28184}]], 
                    "DelayedClickEffect"], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$19221$28184, 
                    FEPrivate`Not[DynamicChart`click$19221$28184]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$19221$28184, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$19221$28184}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"0.8\"", 25, StripOnInput -> False], 
                StyleBox["\"0.866667\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.178927, 0.305394, 0.933501], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.11928466666666668`, 0.203596, 0.622334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.178927`", ",", "0.305394`", ",", "0.933501`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.178927, 0.305394, 0.933501]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.178927, 0.305394, 0.933501], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5448793333333334, 0.089418, 0.10947866666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "None"}], "}"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"2\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )], 
        GraphicsBox[{{}, {}, {
           {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
            0.5]}], {{{}, {}}, {}}, {}}, {{{}, {}}, {}}, {}, {}}, {{}, {}}, \
{{{}, {}, {}, {}}, {}}},
         ContentSelectable->False,
         DisplayFunction->Identity,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         PlotRange->{{-1., 1.}, {-1., 1.}},
         PlotRangePadding->Scaled[0.05]], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              
              DynamicModuleBox[{
               DynamicChart`click$19284$28202 = False, 
                DynamicChart`click$19288$28202 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 3.141592653589793}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$19284$28202, 
                    FEPrivate`Not[DynamicChart`click$19284$28202]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$19284$28202, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$19284$28202}]], 
                    "DelayedClickEffect"]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$19288$28202, 
                    FEPrivate`Not[DynamicChart`click$19288$28202]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$19288$28202, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$19288$28202}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$19284$28202, 
                    FEPrivate`Not[DynamicChart`click$19284$28202]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$19284$28202, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$19284$28202}]], 
                    "DelayedClickEffect"], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$19288$28202, 
                    FEPrivate`Not[DynamicChart`click$19288$28202]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$19288$28202, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$19288$28202}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"0.8\"", 25, StripOnInput -> False], 
                StyleBox["\"0.866667\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.178927, 0.305394, 0.933501], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.11928466666666668`, 0.203596, 0.622334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.178927`", ",", "0.305394`", ",", "0.933501`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.178927, 0.305394, 0.933501]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.178927, 0.305394, 0.933501], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5448793333333334, 0.089418, 0.10947866666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "None"}], "}"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"2\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              
              DynamicModuleBox[{
               DynamicChart`click$18862$28220 = False, 
                DynamicChart`click$18866$28220 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 3.141592653589793}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$18862$28220, 
                    FEPrivate`Not[DynamicChart`click$18862$28220]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$18862$28220, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$18862$28220}]], 
                    "DelayedClickEffect"]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$18866$28220, 
                    FEPrivate`Not[DynamicChart`click$18866$28220]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$18866$28220, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$18866$28220}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$18862$28220, 
                    FEPrivate`Not[DynamicChart`click$18862$28220]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$18862$28220, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$18862$28220}]], 
                    "DelayedClickEffect"], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$18866$28220, 
                    FEPrivate`Not[DynamicChart`click$18866$28220]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$18866$28220, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$18866$28220}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"0.8\"", 25, StripOnInput -> False], 
                StyleBox["\"0.866667\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.178927, 0.305394, 0.933501], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.11928466666666668`, 0.203596, 0.622334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.178927`", ",", "0.305394`", ",", "0.933501`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.178927, 0.305394, 0.933501]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.178927, 0.305394, 0.933501], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5448793333333334, 0.089418, 0.10947866666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "None"}], "}"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"2\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              
              DynamicModuleBox[{
               DynamicChart`click$19351$28238 = False, 
                DynamicChart`click$19355$28238 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 3.141592653589793}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$19351$28238, 
                    FEPrivate`Not[DynamicChart`click$19351$28238]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$19351$28238, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$19351$28238}]], 
                    "DelayedClickEffect"]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$19355$28238, 
                    FEPrivate`Not[DynamicChart`click$19355$28238]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$19355$28238, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$19355$28238}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$19351$28238, 
                    FEPrivate`Not[DynamicChart`click$19351$28238]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$19351$28238, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$19351$28238}]], 
                    "DelayedClickEffect"], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$19355$28238, 
                    FEPrivate`Not[DynamicChart`click$19355$28238]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$19355$28238, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$19355$28238}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"0.8\"", 25, StripOnInput -> False], 
                StyleBox["\"0.866667\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.178927, 0.305394, 0.933501], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.11928466666666668`, 0.203596, 0.622334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.178927`", ",", "0.305394`", ",", "0.933501`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.178927, 0.305394, 0.933501]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.178927, 0.305394, 0.933501], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5448793333333334, 0.089418, 0.10947866666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "None"}], "}"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, BaselinePosition -> {1, 1}]& 
            ), InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"2\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              DynamicModuleBox[{DynamicChart`click$18928$28253 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$18928$28253, 
                    FEPrivate`Not[DynamicChart`click$18928$28253]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$18928$28253, {{{1., 0.}, {0., 1.}}, {
                    0.2, 0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$18928$28253}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$18928$28253, 
                    FEPrivate`Not[DynamicChart`click$18928$28253]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$18928$28253, {{{1., 0.}, {0., 1.}}, {
                    0.2, 0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$18928$28253}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"1.\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5448793333333334, 0.089418, 
                    0.10947866666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", "None", "}"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"1\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              
              DynamicModuleBox[{
               DynamicChart`click$20293$28273 = False, 
                DynamicChart`click$20297$28273 = False, 
                DynamicChart`click$20301$28273 = False, 
                DynamicChart`click$20305$28273 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.7022383578612481, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 52]& , TagBoxNote -> "52"], 
                    StyleBox["52", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[52, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$20293$28273, 
                    FEPrivate`Not[DynamicChart`click$20293$28273]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$20293$28273, {{{1., 0.}, {0., 1.}}, {
                    0.06878978372678567, 0.18779767212301132`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$20293$28273}]], 
                    "DelayedClickEffect"]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.819984, 0.859297, 0.982692]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.550234036443479, -0.7022383578612481}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 25]& , 
                    TagBoxNote -> "25"], 
                    StyleBox["25", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[25, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$20297$28273, 
                    FEPrivate`Not[DynamicChart`click$20297$28273]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$20297$28273, {{{1., 0.}, {0., 
                    1.}}, {-0.011082294983193991`, -0.1996927207934868}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$20297$28273}]], 
                    "DelayedClickEffect"]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.992503, 0.986373, 0.425376]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.067672826446504, -2.550234036443479}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 7]& , 
                    TagBoxNote -> "7"], 
                    StyleBox["7", {}, StripOnInput -> False]], Annotation[#, 
                    Style[7, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$20301$28273, 
                    FEPrivate`Not[DynamicChart`click$20301$28273]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$20301$28273, {{{1., 0.}, {0., 
                    1.}}, {-0.1890367656321639, -0.06530774256801668}}, {{1, 
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$20301$28273}]], 
                    "DelayedClickEffect"]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -3.067672826446504}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$20305$28273, 
                    FEPrivate`Not[DynamicChart`click$20305$28273]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$20305$28273, {{{1., 0.}, {0., 
                    1.}}, {-0.19986341202860458`, -0.007390299877828983}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$20305$28273}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 52]& , TagBoxNote -> "52"], 
                    StyleBox["52", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[52, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$20293$28273, 
                    FEPrivate`Not[DynamicChart`click$20293$28273]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$20293$28273, {{{1., 0.}, {0., 1.}}, {
                    0.06878978372678567, 0.18779767212301132`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$20293$28273}]], 
                    "DelayedClickEffect"], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 25]& , TagBoxNote -> "25"], 
                    StyleBox["25", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[25, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$20297$28273, 
                    FEPrivate`Not[DynamicChart`click$20297$28273]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$20297$28273, {{{1., 0.}, {0., 
                    1.}}, {-0.011082294983193991`, -0.1996927207934868}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$20297$28273}]], 
                    "DelayedClickEffect"], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 7]& , TagBoxNote -> "7"], 
                    StyleBox["7", {}, StripOnInput -> False]], Annotation[#, 
                    Style[7, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$20301$28273, 
                    FEPrivate`Not[DynamicChart`click$20301$28273]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$20301$28273, {{{1., 0.}, {0., 
                    1.}}, {-0.1890367656321639, -0.06530774256801668}}, {{1, 
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$20301$28273}]], 
                    "DelayedClickEffect"], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$20305$28273, 
                    FEPrivate`Not[DynamicChart`click$20305$28273]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$20305$28273, {{{1., 0.}, {0., 
                    1.}}, {-0.19986341202860458`, -0.007390299877828983}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$20305$28273}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"0.8\"", 25, StripOnInput -> False], "None", 
                "None", 
                StyleBox["\"1.\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.178927, 0.305394, 0.933501], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.11928466666666668`, 0.203596, 0.622334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.178927`", ",", "0.305394`", ",", "0.933501`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.178927, 0.305394, 0.933501]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.178927, 0.305394, 0.933501], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.819984, 0.859297, 0.982692], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.546656, 0.5728646666666667, 0.655128], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.819984`", ",", "0.859297`", ",", "0.982692`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.819984, 0.859297, 0.982692]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.819984, 0.859297, 0.982692], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.992503, 0.986373, 0.425376], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6616686666666667, 0.6575820000000001, 0.283584], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.992503`", ",", "0.986373`", ",", "0.425376`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.992503, 0.986373, 0.425376]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.992503, 0.986373, 0.425376], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5448793333333334, 0.089418, 0.10947866666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "None", ",", "None", ",", "None"}], 
                    "}"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"85\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              DynamicModuleBox[{DynamicChart`click$18986$28288 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$18986$28288, 
                    FEPrivate`Not[DynamicChart`click$18986$28288]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$18986$28288, {{{1., 0.}, {0., 1.}}, {
                    0.2, 0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$18986$28288}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$18986$28288, 
                    FEPrivate`Not[DynamicChart`click$18986$28288]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$18986$28288, {{{1., 0.}, {0., 1.}}, {
                    0.2, 0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$18986$28288}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"1.\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5448793333333334, 0.089418, 
                    0.10947866666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", "None", "}"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"1\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )]},
       {
        StyleBox["\<\"PHI\"\>",
         StripOnInput->False,
         FontSize->20], 
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            DefaultBaseStyle->"ColorSwatchGraphics",
            Frame->True,
            FrameStyle->GrayLevel[0.6666666666666666],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 1.35 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}],
            PlotRangePadding->None],
           StyleBox[
            RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> False]],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["GrayLevelColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         GrayLevel[1],
         Editable->False,
         Selectable->False], 
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            DefaultBaseStyle->"ColorSwatchGraphics",
            Frame->True,
            FrameStyle->GrayLevel[0.6666666666666666],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 1.35 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}],
            PlotRangePadding->None],
           StyleBox[
            RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> False]],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["GrayLevelColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         GrayLevel[1],
         Editable->False,
         Selectable->False], 
        GraphicsBox[{{}, {}, {
           {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
            0.5]}], {{{}, {}}, {}}, {}}, {{{}, {}}, {}}, {}, {}}, {{}, {}}, \
{{{}, {}, {}, {}}, {}}},
         ContentSelectable->False,
         DisplayFunction->Identity,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         PlotRange->{{-1., 1.}, {-1., 1.}},
         PlotRangePadding->Scaled[0.05]], 
        GraphicsBox[{{}, {}, {
           {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
            0.5]}], {{{}, {}}, {}}, {}}, {{{}, {}}, {}}, {}, {}}, {{}, {}}, \
{{{}, {}, {}, {}}, {}}},
         ContentSelectable->False,
         DisplayFunction->Identity,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         PlotRange->{{-1., 1.}, {-1., 1.}},
         PlotRangePadding->Scaled[0.05]], 
        GraphicsBox[{{}, {}, {
           {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
            0.5]}], {{{}, {}}, {}}, {}}, {{{}, {}}, {}}, {}, {}}, {{}, {}}, \
{{{}, {}, {}, {}}, {}}},
         ContentSelectable->False,
         DisplayFunction->Identity,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         PlotRange->{{-1., 1.}, {-1., 1.}},
         PlotRangePadding->Scaled[0.05]], 
        GraphicsBox[{{}, {}, {
           {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
            0.5]}], {{{}, {}}, {}}, {}}, {{{}, {}}, {}}, {}, {}}, {{}, {}}, \
{{{}, {}, {}, {}}, {}}},
         ContentSelectable->False,
         DisplayFunction->Identity,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         PlotRange->{{-1., 1.}, {-1., 1.}},
         PlotRangePadding->Scaled[0.05]], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              
              DynamicModuleBox[{
               DynamicChart`click$20549$28308 = False, 
                DynamicChart`click$20553$28308 = False, 
                DynamicChart`click$20557$28308 = False, 
                DynamicChart`click$20561$28308 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.5707963267948966`, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 2]& , TagBoxNote -> "2"], 
                    StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                    Style[2, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$20549$28308, 
                    FEPrivate`Not[DynamicChart`click$20549$28308]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$20549$28308, {{{1., 0.}, {0., 
                    1.}}, {-0.1414213562373095, 0.14142135623730953`}}, {{1, 
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$20549$28308}]], 
                    "DelayedClickEffect"]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.819984, 0.859297, 0.982692]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-0.7853981633974483, 
                    1.5707963267948966`}]}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 3]& , TagBoxNote -> "3"], 
                    StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                    Style[3, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$20553$28308, 
                    FEPrivate`Not[DynamicChart`click$20553$28308]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$20553$28308, {{{1., 0.}, {0., 1.}}, {
                    0.18477590650225736`, 0.07653668647301796}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$20553$28308}]], 
                    "DelayedClickEffect"]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.992503, 0.986373, 0.425376]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.356194490192345, -0.7853981633974483}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 2]& , 
                    TagBoxNote -> "2"], 
                    StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                    Style[2, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$20557$28308, 
                    FEPrivate`Not[DynamicChart`click$20557$28308]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$20557$28308, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$20557$28308}]], 
                    "DelayedClickEffect"]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.356194490192345}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$20561$28308, 
                    FEPrivate`Not[DynamicChart`click$20561$28308]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$20561$28308, {{{1., 0.}, {0., 
                    1.}}, {-0.18477590650225736`, -0.07653668647301798}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$20561$28308}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 2]& , TagBoxNote -> "2"], 
                    StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                    Style[2, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$20549$28308, 
                    FEPrivate`Not[DynamicChart`click$20549$28308]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$20549$28308, {{{1., 0.}, {0., 
                    1.}}, {-0.1414213562373095, 0.14142135623730953`}}, {{1, 
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$20549$28308}]], 
                    "DelayedClickEffect"], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 3]& , TagBoxNote -> "3"], 
                    StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                    Style[3, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$20553$28308, 
                    FEPrivate`Not[DynamicChart`click$20553$28308]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$20553$28308, {{{1., 0.}, {0., 1.}}, {
                    0.18477590650225736`, 0.07653668647301796}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$20553$28308}]], 
                    "DelayedClickEffect"], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 2]& , TagBoxNote -> "2"], 
                    StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                    Style[2, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$20557$28308, 
                    FEPrivate`Not[DynamicChart`click$20557$28308]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$20557$28308, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$20557$28308}]], 
                    "DelayedClickEffect"], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$20561$28308, 
                    FEPrivate`Not[DynamicChart`click$20561$28308]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$20561$28308, {{{1., 0.}, {0., 
                    1.}}, {-0.18477590650225736`, -0.07653668647301798}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$20561$28308}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"0.8\"", 25, StripOnInput -> False], "None", 
                "None", 
                StyleBox["\"1.\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.178927, 0.305394, 0.933501], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.11928466666666668`, 0.203596, 0.622334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.178927`", ",", "0.305394`", ",", "0.933501`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.178927, 0.305394, 0.933501]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.178927, 0.305394, 0.933501], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.819984, 0.859297, 0.982692], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.546656, 0.5728646666666667, 0.655128], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.819984`", ",", "0.859297`", ",", "0.982692`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.819984, 0.859297, 0.982692]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.819984, 0.859297, 0.982692], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.992503, 0.986373, 0.425376], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6616686666666667, 0.6575820000000001, 0.283584], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.992503`", ",", "0.986373`", ",", "0.425376`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.992503, 0.986373, 0.425376]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.992503, 0.986373, 0.425376], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5448793333333334, 0.089418, 0.10947866666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "None", ",", "None", ",", "None"}], 
                    "}"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"8\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              
              DynamicModuleBox[{
               DynamicChart`click$21005$28326 = False, 
                DynamicChart`click$21009$28326 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 3.141592653589793}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$21005$28326, 
                    FEPrivate`Not[DynamicChart`click$21005$28326]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$21005$28326, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$21005$28326}]], 
                    "DelayedClickEffect"]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$21009$28326, 
                    FEPrivate`Not[DynamicChart`click$21009$28326]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$21009$28326, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$21009$28326}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$21005$28326, 
                    FEPrivate`Not[DynamicChart`click$21005$28326]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$21005$28326, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$21005$28326}]], 
                    "DelayedClickEffect"], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$21009$28326, 
                    FEPrivate`Not[DynamicChart`click$21009$28326]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$21009$28326, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$21009$28326}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"0.866667\"", 25, StripOnInput -> False], 
                StyleBox["\"0.933333\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.178927, 0.305394, 0.933501], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.11928466666666668`, 0.203596, 0.622334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.178927`", ",", "0.305394`", ",", "0.933501`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.178927, 0.305394, 0.933501]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.178927, 0.305394, 0.933501], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5448793333333334, 0.089418, 0.10947866666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "None"}], "}"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"2\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              
              DynamicModuleBox[{
               DynamicChart`click$20627$28344 = False, 
                DynamicChart`click$20631$28344 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 3.141592653589793}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$20627$28344, 
                    FEPrivate`Not[DynamicChart`click$20627$28344]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$20627$28344, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$20627$28344}]], 
                    "DelayedClickEffect"]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$20631$28344, 
                    FEPrivate`Not[DynamicChart`click$20631$28344]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$20631$28344, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$20631$28344}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$20627$28344, 
                    FEPrivate`Not[DynamicChart`click$20627$28344]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$20627$28344, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$20627$28344}]], 
                    "DelayedClickEffect"], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$20631$28344, 
                    FEPrivate`Not[DynamicChart`click$20631$28344]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$20631$28344, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$20631$28344}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"0.8\"", 25, StripOnInput -> False], 
                StyleBox["\"0.866667\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.178927, 0.305394, 0.933501], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.11928466666666668`, 0.203596, 0.622334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.178927`", ",", "0.305394`", ",", "0.933501`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.178927, 0.305394, 0.933501]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.178927, 0.305394, 0.933501], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5448793333333334, 0.089418, 0.10947866666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "None"}], "}"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"2\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              
              DynamicModuleBox[{
               DynamicChart`click$21073$28362 = False, 
                DynamicChart`click$21077$28362 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 3.141592653589793}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$21073$28362, 
                    FEPrivate`Not[DynamicChart`click$21073$28362]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$21073$28362, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$21073$28362}]], 
                    "DelayedClickEffect"]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$21077$28362, 
                    FEPrivate`Not[DynamicChart`click$21077$28362]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$21077$28362, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$21077$28362}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$21073$28362, 
                    FEPrivate`Not[DynamicChart`click$21073$28362]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$21073$28362, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$21073$28362}]], 
                    "DelayedClickEffect"], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$21077$28362, 
                    FEPrivate`Not[DynamicChart`click$21077$28362]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$21077$28362, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$21077$28362}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"0.8\"", 25, StripOnInput -> False], 
                StyleBox["\"0.866667\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.178927, 0.305394, 0.933501], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.11928466666666668`, 0.203596, 0.622334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.178927`", ",", "0.305394`", ",", "0.933501`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.178927, 0.305394, 0.933501]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.178927, 0.305394, 0.933501], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5448793333333334, 0.089418, 0.10947866666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "None"}], "}"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, BaselinePosition -> {1, 1}]& 
            ), InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"2\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              
              DynamicModuleBox[{
               DynamicChart`click$20694$28380 = False, 
                DynamicChart`click$20698$28380 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 3.141592653589793}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$20694$28380, 
                    FEPrivate`Not[DynamicChart`click$20694$28380]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$20694$28380, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$20694$28380}]], 
                    "DelayedClickEffect"]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$20698$28380, 
                    FEPrivate`Not[DynamicChart`click$20698$28380]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$20698$28380, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$20698$28380}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$20694$28380, 
                    FEPrivate`Not[DynamicChart`click$20694$28380]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$20694$28380, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$20694$28380}]], 
                    "DelayedClickEffect"], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$20698$28380, 
                    FEPrivate`Not[DynamicChart`click$20698$28380]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$20698$28380, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$20698$28380}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"0.8\"", 25, StripOnInput -> False], 
                StyleBox["\"0.866667\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.178927, 0.305394, 0.933501], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.11928466666666668`, 0.203596, 0.622334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.178927`", ",", "0.305394`", ",", "0.933501`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.178927, 0.305394, 0.933501]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.178927, 0.305394, 0.933501], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5448793333333334, 0.089418, 0.10947866666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "None"}], "}"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"2\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              
              DynamicModuleBox[{
               DynamicChart`click$21140$28398 = False, 
                DynamicChart`click$21144$28398 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 3.141592653589793}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$21140$28398, 
                    FEPrivate`Not[DynamicChart`click$21140$28398]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$21140$28398, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$21140$28398}]], 
                    "DelayedClickEffect"]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$21144$28398, 
                    FEPrivate`Not[DynamicChart`click$21144$28398]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$21144$28398, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$21144$28398}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$21140$28398, 
                    FEPrivate`Not[DynamicChart`click$21140$28398]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$21140$28398, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$21140$28398}]], 
                    "DelayedClickEffect"], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$21144$28398, 
                    FEPrivate`Not[DynamicChart`click$21144$28398]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$21144$28398, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$21144$28398}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"0.8\"", 25, StripOnInput -> False], 
                StyleBox["\"0.866667\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.178927, 0.305394, 0.933501], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.11928466666666668`, 0.203596, 0.622334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.178927`", ",", "0.305394`", ",", "0.933501`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.178927, 0.305394, 0.933501]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.178927, 0.305394, 0.933501], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5448793333333334, 0.089418, 0.10947866666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "None"}], "}"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"2\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              DynamicModuleBox[{DynamicChart`click$20760$28413 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$20760$28413, 
                    FEPrivate`Not[DynamicChart`click$20760$28413]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$20760$28413, {{{1., 0.}, {0., 1.}}, {
                    0.2, 0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$20760$28413}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$20760$28413, 
                    FEPrivate`Not[DynamicChart`click$20760$28413]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$20760$28413, {{{1., 0.}, {0., 1.}}, {
                    0.2, 0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$20760$28413}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"0.866667\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5448793333333334, 0.089418, 
                    0.10947866666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", "None", "}"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"1\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              DynamicModuleBox[{DynamicChart`click$21207$28428 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$21207$28428, 
                    FEPrivate`Not[DynamicChart`click$21207$28428]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$21207$28428, {{{1., 0.}, {0., 1.}}, {
                    0.2, 0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$21207$28428}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$21207$28428, 
                    FEPrivate`Not[DynamicChart`click$21207$28428]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$21207$28428, {{{1., 0.}, {0., 1.}}, {
                    0.2, 0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$21207$28428}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"0.866667\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5448793333333334, 0.089418, 
                    0.10947866666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", "None", "}"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"1\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              DynamicModuleBox[{DynamicChart`click$20818$28443 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$20818$28443, 
                    FEPrivate`Not[DynamicChart`click$20818$28443]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$20818$28443, {{{1., 0.}, {0., 1.}}, {
                    0.2, 0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$20818$28443}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$20818$28443, 
                    FEPrivate`Not[DynamicChart`click$20818$28443]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$20818$28443, {{{1., 0.}, {0., 1.}}, {
                    0.2, 0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$20818$28443}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"1.\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5448793333333334, 0.089418, 
                    0.10947866666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", "None", "}"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"1\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )]},
       {
        StyleBox["\<\"SED\"\>",
         StripOnInput->False,
         FontSize->20], 
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            DefaultBaseStyle->"ColorSwatchGraphics",
            Frame->True,
            FrameStyle->GrayLevel[0.6666666666666666],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 1.35 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}],
            PlotRangePadding->None],
           StyleBox[
            RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> False]],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["GrayLevelColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         GrayLevel[1],
         Editable->False,
         Selectable->False], 
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            DefaultBaseStyle->"ColorSwatchGraphics",
            Frame->True,
            FrameStyle->GrayLevel[0.6666666666666666],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 1.35 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}],
            PlotRangePadding->None],
           StyleBox[
            RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> False]],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["GrayLevelColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         GrayLevel[1],
         Editable->False,
         Selectable->False], 
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            DefaultBaseStyle->"ColorSwatchGraphics",
            Frame->True,
            FrameStyle->GrayLevel[0.6666666666666666],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 1.35 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}],
            PlotRangePadding->None],
           StyleBox[
            RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> False]],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["GrayLevelColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         GrayLevel[1],
         Editable->False,
         Selectable->False], 
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            DefaultBaseStyle->"ColorSwatchGraphics",
            Frame->True,
            FrameStyle->GrayLevel[0.6666666666666666],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 1.35 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}],
            PlotRangePadding->None],
           StyleBox[
            RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> False]],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["GrayLevelColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         GrayLevel[1],
         Editable->False,
         Selectable->False], 
        GraphicsBox[{{}, {}, {
           {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
            0.5]}], {{{}, {}}, {}}, {}}, {{{}, {}}, {}}, {}, {}}, {{}, {}}, \
{{{}, {}, {}, {}}, {}}},
         ContentSelectable->False,
         DisplayFunction->Identity,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         PlotRange->{{-1., 1.}, {-1., 1.}},
         PlotRangePadding->Scaled[0.05]], 
        GraphicsBox[{{}, {}, {
           {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
            0.5]}], {{{}, {}}, {}}, {}}, {{{}, {}}, {}}, {}, {}}, {{}, {}}, \
{{{}, {}, {}, {}}, {}}},
         ContentSelectable->False,
         DisplayFunction->Identity,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         PlotRange->{{-1., 1.}, {-1., 1.}},
         PlotRangePadding->Scaled[0.05]], 
        GraphicsBox[{{}, {}, {
           {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
            0.5]}], {{{}, {}}, {}}, {}}, {{{}, {}}, {}}, {}, {}}, {{}, {}}, \
{{{}, {}, {}, {}}, {}}},
         ContentSelectable->False,
         DisplayFunction->Identity,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         PlotRange->{{-1., 1.}, {-1., 1.}},
         PlotRangePadding->Scaled[0.05]], 
        GraphicsBox[{{}, {}, {
           {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
            0.5]}], {{{}, {}}, {}}, {}}, {{{}, {}}, {}}, {}, {}}, {{}, {}}, \
{{{}, {}, {}, {}}, {}}},
         ContentSelectable->False,
         DisplayFunction->Identity,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         PlotRange->{{-1., 1.}, {-1., 1.}},
         PlotRangePadding->Scaled[0.05]], 
        GraphicsBox[{{}, {}, {
           {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
            0.5]}], {{{}, {}}, {}}, {}}, {{{}, {}}, {}}, {}, {}}, {{}, {}}, \
{{{}, {}, {}, {}}, {}}},
         ContentSelectable->False,
         DisplayFunction->Identity,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         PlotRange->{{-1., 1.}, {-1., 1.}},
         PlotRangePadding->Scaled[0.05]], 
        GraphicsBox[{{}, {}, {
           {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
            0.5]}], {{{}, {}}, {}}, {}}, {{{}, {}}, {}}, {}, {}}, {{}, {}}, \
{{{}, {}, {}, {}}, {}}},
         ContentSelectable->False,
         DisplayFunction->Identity,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         PlotRange->{{-1., 1.}, {-1., 1.}},
         PlotRangePadding->Scaled[0.05]], 
        GraphicsBox[{{}, {}, {
           {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
            0.5]}], {{{}, {}}, {}}, {}}, {{{}, {}}, {}}, {}, {}}, {{}, {}}, \
{{{}, {}, {}, {}}, {}}},
         ContentSelectable->False,
         DisplayFunction->Identity,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         PlotRange->{{-1., 1.}, {-1., 1.}},
         PlotRangePadding->Scaled[0.05]], 
        GraphicsBox[{{}, {}, {
           {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
            0.5]}], {{{}, {}}, {}}, {}}, {{{}, {}}, {}}, {}, {}}, {{}, {}}, \
{{{}, {}, {}, {}}, {}}},
         ContentSelectable->False,
         DisplayFunction->Identity,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         PlotRange->{{-1., 1.}, {-1., 1.}},
         PlotRangePadding->Scaled[0.05]], 
        GraphicsBox[{{}, {}, {
           {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
            0.5]}], {{{}, {}}, {}}, {}}, {{{}, {}}, {}}, {}, {}}, {{}, {}}, \
{{{}, {}, {}, {}}, {}}},
         ContentSelectable->False,
         DisplayFunction->Identity,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         PlotRange->{{-1., 1.}, {-1., 1.}},
         PlotRangePadding->Scaled[0.05]], 
        GraphicsBox[{{}, {}, {
           {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
            0.5]}], {{{}, {}}, {}}, {}}, {{{}, {}}, {}}, {}, {}}, {{}, {}}, \
{{{}, {}, {}, {}}, {}}},
         ContentSelectable->False,
         DisplayFunction->Identity,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         PlotRange->{{-1., 1.}, {-1., 1.}},
         PlotRangePadding->Scaled[0.05]], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              DynamicModuleBox[{DynamicChart`click$21499$28458 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$21499$28458, 
                    FEPrivate`Not[DynamicChart`click$21499$28458]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$21499$28458, {{{1., 0.}, {0., 1.}}, {
                    0.2, 0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$21499$28458}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$21499$28458, 
                    FEPrivate`Not[DynamicChart`click$21499$28458]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$21499$28458, {{{1., 0.}, {0., 1.}}, {
                    0.2, 0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$21499$28458}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"1.\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5448793333333334, 0.089418, 
                    0.10947866666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", "None", "}"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"1\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )]},
       {
        StyleBox["\<\"AUS\"\>",
         StripOnInput->False,
         FontSize->20], 
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            DefaultBaseStyle->"ColorSwatchGraphics",
            Frame->True,
            FrameStyle->GrayLevel[0.6666666666666666],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 1.35 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}],
            PlotRangePadding->None],
           StyleBox[
            RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> False]],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["GrayLevelColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         GrayLevel[1],
         Editable->False,
         Selectable->False], 
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            DefaultBaseStyle->"ColorSwatchGraphics",
            Frame->True,
            FrameStyle->GrayLevel[0.6666666666666666],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 1.35 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}],
            PlotRangePadding->None],
           StyleBox[
            RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> False]],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["GrayLevelColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         GrayLevel[1],
         Editable->False,
         Selectable->False], 
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            DefaultBaseStyle->"ColorSwatchGraphics",
            Frame->True,
            FrameStyle->GrayLevel[0.6666666666666666],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 1.35 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}],
            PlotRangePadding->None],
           StyleBox[
            RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> False]],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["GrayLevelColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         GrayLevel[1],
         Editable->False,
         Selectable->False], 
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            DefaultBaseStyle->"ColorSwatchGraphics",
            Frame->True,
            FrameStyle->GrayLevel[0.6666666666666666],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 1.35 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}],
            PlotRangePadding->None],
           StyleBox[
            RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> False]],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["GrayLevelColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         GrayLevel[1],
         Editable->False,
         Selectable->False], 
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            DefaultBaseStyle->"ColorSwatchGraphics",
            Frame->True,
            FrameStyle->GrayLevel[0.6666666666666666],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 1.35 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}],
            PlotRangePadding->None],
           StyleBox[
            RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> False]],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["GrayLevelColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         GrayLevel[1],
         Editable->False,
         Selectable->False], 
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            DefaultBaseStyle->"ColorSwatchGraphics",
            Frame->True,
            FrameStyle->GrayLevel[0.6666666666666666],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 1.35 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}],
            PlotRangePadding->None],
           StyleBox[
            RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> False]],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["GrayLevelColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         GrayLevel[1],
         Editable->False,
         Selectable->False], 
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            DefaultBaseStyle->"ColorSwatchGraphics",
            Frame->True,
            FrameStyle->GrayLevel[0.6666666666666666],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 1.35 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}],
            PlotRangePadding->None],
           StyleBox[
            RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> False]],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["GrayLevelColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         GrayLevel[1],
         Editable->False,
         Selectable->False], 
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            DefaultBaseStyle->"ColorSwatchGraphics",
            Frame->True,
            FrameStyle->GrayLevel[0.6666666666666666],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 1.35 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}],
            PlotRangePadding->None],
           StyleBox[
            RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> False]],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["GrayLevelColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         GrayLevel[1],
         Editable->False,
         Selectable->False], 
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            DefaultBaseStyle->"ColorSwatchGraphics",
            Frame->True,
            FrameStyle->GrayLevel[0.6666666666666666],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 1.35 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}],
            PlotRangePadding->None],
           StyleBox[
            RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> False]],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["GrayLevelColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         GrayLevel[1],
         Editable->False,
         Selectable->False], 
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            DefaultBaseStyle->"ColorSwatchGraphics",
            Frame->True,
            FrameStyle->GrayLevel[0.6666666666666666],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 1.35 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}],
            PlotRangePadding->None],
           StyleBox[
            RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> False]],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["GrayLevelColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         GrayLevel[1],
         Editable->False,
         Selectable->False], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              
              DynamicModuleBox[{
               DynamicChart`click$21792$28476 = False, 
                DynamicChart`click$21796$28476 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 3.141592653589793}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$21792$28476, 
                    FEPrivate`Not[DynamicChart`click$21792$28476]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$21792$28476, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$21792$28476}]], 
                    "DelayedClickEffect"]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$21796$28476, 
                    FEPrivate`Not[DynamicChart`click$21796$28476]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$21796$28476, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$21796$28476}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$21792$28476, 
                    FEPrivate`Not[DynamicChart`click$21792$28476]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$21792$28476, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$21792$28476}]], 
                    "DelayedClickEffect"], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$21796$28476, 
                    FEPrivate`Not[DynamicChart`click$21796$28476]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$21796$28476, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$21796$28476}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"0.866667\"", 25, StripOnInput -> False], 
                StyleBox["\"0.933333\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.178927, 0.305394, 0.933501], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.11928466666666668`, 0.203596, 0.622334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.178927`", ",", "0.305394`", ",", "0.933501`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.178927, 0.305394, 0.933501]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.178927, 0.305394, 0.933501], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5448793333333334, 0.089418, 0.10947866666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "None"}], "}"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"2\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              
              DynamicModuleBox[{
               DynamicChart`click$21975$28494 = False, 
                DynamicChart`click$21979$28494 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 3.141592653589793}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$21975$28494, 
                    FEPrivate`Not[DynamicChart`click$21975$28494]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$21975$28494, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$21975$28494}]], 
                    "DelayedClickEffect"]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$21979$28494, 
                    FEPrivate`Not[DynamicChart`click$21979$28494]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$21979$28494, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$21979$28494}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$21975$28494, 
                    FEPrivate`Not[DynamicChart`click$21975$28494]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$21975$28494, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$21975$28494}]], 
                    "DelayedClickEffect"], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$21979$28494, 
                    FEPrivate`Not[DynamicChart`click$21979$28494]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$21979$28494, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$21979$28494}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"0.866667\"", 25, StripOnInput -> False], 
                StyleBox["\"0.933333\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, 
                    GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.178927, 0.305394, 0.933501], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.11928466666666668`, 0.203596, 0.622334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.178927`", ",", "0.305394`", ",", "0.933501`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.178927, 0.305394, 0.933501]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.178927, 0.305394, 0.933501], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5448793333333334, 0.089418, 0.10947866666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "None"}], "}"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"2\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              DynamicModuleBox[{DynamicChart`click$21858$28509 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$21858$28509, 
                    FEPrivate`Not[DynamicChart`click$21858$28509]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$21858$28509, {{{1., 0.}, {0., 1.}}, {
                    0.2, 0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$21858$28509}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$21858$28509, 
                    FEPrivate`Not[DynamicChart`click$21858$28509]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$21858$28509, {{{1., 0.}, {0., 1.}}, {
                    0.2, 0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$21858$28509}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"0.933333\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5448793333333334, 0.089418, 
                    0.10947866666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", "None", "}"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"1\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              DynamicModuleBox[{DynamicChart`click$22041$28524 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$22041$28524, 
                    FEPrivate`Not[DynamicChart`click$22041$28524]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$22041$28524, {{{1., 0.}, {0., 1.}}, {
                    0.2, 0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$22041$28524}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$22041$28524, 
                    FEPrivate`Not[DynamicChart`click$22041$28524]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$22041$28524, {{{1., 0.}, {0., 1.}}, {
                    0.2, 0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$22041$28524}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"0.933333\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5448793333333334, 0.089418, 
                    0.10947866666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", "None", "}"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"1\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )], 
        TemplateBox[{TemplateBox[{
            GraphicsBox[{{}, {}, 
              DynamicModuleBox[{DynamicChart`click$21916$28539 = False}, {{
                 Directive[
                  RGBColor[0.5, 0.5, 1.], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$21916$28539, 
                    FEPrivate`Not[DynamicChart`click$21916$28539]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$21916$28539, {{{1., 0.}, {0., 1.}}, {
                    0.2, 0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$21916$28539}]], 
                    "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
                    TagBox[
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$21916$28539, 
                    FEPrivate`Not[DynamicChart`click$21916$28539]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                    Dynamic[
                    FEPrivate`If[
                    DynamicChart`click$21916$28539, {{{1., 0.}, {0., 1.}}, {
                    0.2, 0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$21916$28539}]], 
                    "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
               DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {DisplayFunction -> Identity, ContentSelectable -> False, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
              PlotRangePadding -> Scaled[0.05]}], 
            FormBox[
             FormBox[
              TemplateBox[{
                StyleBox["\"1.\"", 25, StripOnInput -> False]}, 
               "SwatchLegend", DisplayFunction -> (FormBox[
                 StyleBox[
                  StyleBox[
                   PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                  FontFamily -> "Arial"}, Background -> Automatic, 
                  StripOnInput -> False], TraditionalForm]& ), 
               InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5448793333333334, 0.089418, 
                    0.10947866666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", "None", "}"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], 
                  "]"}]& ), Editable -> True], TraditionalForm], 
             TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"]}, {
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, 
             BaselinePosition -> {1, 1}]& ), 
           InterpretationFunction -> (RowBox[{"Legended", "[", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> 
           True],StyleBox["\"1\"", 25, StripOnInput -> False]},
         "Labeled",
         DisplayFunction->(GridBox[{{
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ),
         InterpretationFunction->(RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {Left, {Center}}},
      GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {
          RGBColor[1., 1., 0.9], {
           GrayLevel[1], 
           RGBColor[0.8, 1., 0.8]}}},
      GridBoxDividers->{"Columns" -> {
          RGBColor[0.2, 0.2, 0.2], {
           RGBColor[0.75, 0.75, 0.75]}, 
          RGBColor[0.2, 0.2, 0.2]}, "Rows" -> {
          RGBColor[0.2, 0.2, 0.2], 
          RGBColor[0.2, 0.2, 0.2], {False}, 
          RGBColor[0.2, 0.2, 0.2]}},
      GridBoxFrame->{
       "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> RGBColor[0.2, 0.2, 0.2]}},
      GridBoxItemSize->{"Columns" -> {5, {22}}, "Rows" -> {2, {12}}}],
     "Grid"], TextForm]], "InlineText",ExpressionUUID->
   "b868bf7a-e57c-41b8-9af3-9e628e941f73"],
  Text[
   Grid[{{
      Style["", 25], 
      Style["1b", 25], 
      Style["2a", 25], 
      Style["2b", 25], 
      Style["3a", 25], 
      Style["3b", 25], 
      Style["4a", 25], 
      Style["4b", 25], 
      Style["5a", 25], 
      Style["5b", 25], 
      Style["6a", 25], 
      Style["6b", 25], 
      Style["7a", 25], 
      Style["7b", 25], 
      Style["8a", 25], 
      Style["8b", 25]}, {
      Style["DLB", 20], 
      Graphics[{{}, {}, {{
          Directive[
           RGBColor[0.5, 0.5, 1.], 
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[
             0.5]]]], {{{{{{}, {{}}}}}, {}}, {{}}}}, {{{{{}}, {}}}, {}}, {}, \
{}}, {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
       DisplayFunction -> Identity, ContentSelectable -> False, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
        PlotRangePadding -> Scaled[0.05]}], 
      Graphics[{{}, {}, {{
          Directive[
           RGBColor[0.5, 0.5, 1.], 
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[
             0.5]]]], {{{{{{}, {{}}}}}, {}}, {{}}}}, {{{{{}}, {}}}, {}}, {}, \
{}}, {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
       DisplayFunction -> Identity, ContentSelectable -> False, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
        PlotRangePadding -> Scaled[0.05]}], 
      Graphics[{{}, {}, {{
          Directive[
           RGBColor[0.5, 0.5, 1.], 
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[
             0.5]]]], {{{{{{}, {{}}}}}, {}}, {{}}}}, {{{{{}}, {}}}, {}}, {}, \
{}}, {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
       DisplayFunction -> Identity, ContentSelectable -> False, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
        PlotRangePadding -> Scaled[0.05]}], 
      Graphics[{{}, {}, {{
          Directive[
           RGBColor[0.5, 0.5, 1.], 
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[
             0.5]]]], {{{{{{}, {{}}}}}, {}}, {{}}}}, {{{{{}}, {}}}, {}}, {}, \
{}}, {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
       DisplayFunction -> Identity, ContentSelectable -> False, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
        PlotRangePadding -> Scaled[0.05]}], 
      Graphics[{{}, {}, {{
          Directive[
           RGBColor[0.5, 0.5, 1.], 
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[
             0.5]]]], {{{{{{}, {{}}}}}, {}}, {{}}}}, {{{{{}}, {}}}, {}}, {}, \
{}}, {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
       DisplayFunction -> Identity, ContentSelectable -> False, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
        PlotRangePadding -> Scaled[0.05]}], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          
          DynamicModule[{
           DynamicChart`click$17260 = False, DynamicChart`click$17264 = False,
             DynamicChart`click$17268 = False, DynamicChart`click$17272 = 
            False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 1., {1.3463968515384828`, 
                    3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 4], 
                    Style[4, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., -0.1246979603717467}, {
                    0., 1., 0.156366296493606}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$17260]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.819984, 0.859297, 0.982692]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 1., {-0.8975979010256552, 
                    1.3463968515384828`}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 5], 
                    Style[5, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 0.19498558243636474`}, {
                    0., 1., 0.04450418679126288}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$17264]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.992503, 0.986373, 0.425376]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 
                    1., {-2.6927937030769646`, -0.8975979010256552}], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 4], 
                    Style[4, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., -0.04450418679126278}, {
                    0., 1., -0.19498558243636477`}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$17268]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 
                    1., {-3.141592653589793, -2.6927937030769646`}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., -0.1949855824363647}, {
                    0., 1., -0.044504186791262994`}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$17272]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 4], 
                  Style[4, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., -0.1246979603717467}, {0., 
                   1., 0.156366296493606}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$17260]], 
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 5], 
                  Style[5, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 0.19498558243636474`}, {0.,
                    1., 0.04450418679126288}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$17264]], 
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 4], 
                  Style[4, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., -0.04450418679126278}, {0.,
                    1., -0.19498558243636477`}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$17268]], 
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  TransformationFunction[{{1., 0., -0.1949855824363647}, {0., 
                   1., -0.044504186791262994`}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$17272]]}, {}}}, {}}, {}, {}}, 
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.178927, 0.305394, 0.933501]], 
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.819984, 0.859297, 0.982692]], 
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.992503, 0.986373, 0.425376]], 
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["0.8", 25], None, None, 
            Style["1.", 25]}, LegendMarkers -> {{None, None, None, None}}, 
           LabelStyle -> {}, LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["14", 25], Top], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          
          DynamicModule[{
           DynamicChart`click$16853 = False, DynamicChart`click$16857 = False,
             DynamicChart`click$16861 = False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 1., {0.7853981633974483, 
                    3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 3], 
                    Style[3, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., -0.07653668647301795}, {
                    0., 1., 0.18477590650225736`}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$16853]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.984192, 0.987731, 0.911643]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 1., {-1.5707963267948966`, 
                    0.7853981633974483}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 3], 
                    Style[3, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 0.18477590650225736`}, {
                    0., 1., -0.07653668647301796}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$16857]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 
                    1., {-3.141592653589793, -1.5707963267948966`}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 2], 
                    Style[2, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., -0.1414213562373095}, {
                    0., 1., -0.14142135623730953`}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$16861]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 3], 
                  Style[3, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., -0.07653668647301795}, {0.,
                    1., 0.18477590650225736`}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$16853]], 
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 3], 
                  Style[3, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 0.18477590650225736`}, {0.,
                    1., -0.07653668647301796}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$16857]], 
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 2], 
                  Style[2, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., -0.1414213562373095}, {0., 
                   1., -0.14142135623730953`}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$16861]]}, {}}}, {}}, {}, {}}, 
           
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.178927, 0.305394, 0.933501]], 
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.984192, 0.987731, 0.911643]], 
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["0.8", 25], None, 
            Style["0.933333", 25]}, LegendMarkers -> {{None, None, None}}, 
           LabelStyle -> {}, LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["8", 25], Top], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          
          DynamicModule[{
           DynamicChart`click$17338 = False, DynamicChart`click$17342 = 
            False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    Disk[{0, 0}, 1., {0., 3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 
                    1.2246467991473533`*^-17}, {0., 1., 0.2}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$17338]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    Disk[{0, 0}, 1., {-3.141592653589793, 0.}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 
                    1.2246467991473533`*^-17}, {0., 1., -0.2}, {0., 0., 
                    1.}}]}, 
                    Dynamic[DynamicChart`click$17342]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 
                   1.2246467991473533`*^-17}, {0., 1., 0.2}, {0., 0., 1.}}]}, 
                 
                 Dynamic[DynamicChart`click$17338]], 
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 
                   1.2246467991473533`*^-17}, {0., 1., -0.2}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$17342]]}, {}}}, {}}, {}, {}}, 
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.178927, 0.305394, 0.933501]], 
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["0.8", 25], 
            Style["0.866667", 25]}, LegendMarkers -> {{None, None}}, 
           LabelStyle -> {}, LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["2", 25], Top], 
      Graphics[{{}, {}, {{
          Directive[
           RGBColor[0.5, 0.5, 1.], 
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[
             0.5]]]], {{{{{{}, {{}}}}}, {}}, {{}}}}, {{{{{}}, {}}}, {}}, {}, \
{}}, {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
       DisplayFunction -> Identity, ContentSelectable -> False, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
        PlotRangePadding -> Scaled[0.05]}], 
      Graphics[{{}, {}, {{
          Directive[
           RGBColor[0.5, 0.5, 1.], 
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[
             0.5]]]], {{{{{{}, {{}}}}}, {}}, {{}}}}, {{{{{}}, {}}}, {}}, {}, \
{}}, {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
       DisplayFunction -> Identity, ContentSelectable -> False, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
        PlotRangePadding -> Scaled[0.05]}], 
      Graphics[{{}, {}, {{
          Directive[
           RGBColor[0.5, 0.5, 1.], 
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[
             0.5]]]], {{{{{{}, {{}}}}}, {}}, {{}}}}, {{{{{}}, {}}}, {}}, {}, \
{}}, {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
       DisplayFunction -> Identity, ContentSelectable -> False, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
        PlotRangePadding -> Scaled[0.05]}], 
      Graphics[{{}, {}, {{
          Directive[
           RGBColor[0.5, 0.5, 1.], 
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[
             0.5]]]], {{{{{{}, {{}}}}}, {}}, {{}}}}, {{{{{}}, {}}}, {}}, {}, \
{}}, {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
       DisplayFunction -> Identity, ContentSelectable -> False, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
        PlotRangePadding -> Scaled[0.05]}], 
      Graphics[{{}, {}, {{
          Directive[
           RGBColor[0.5, 0.5, 1.], 
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[
             0.5]]]], {{{{{{}, {{}}}}}, {}}, {{}}}}, {{{{{}}, {}}}, {}}, {}, \
{}}, {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
       DisplayFunction -> Identity, ContentSelectable -> False, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
        PlotRangePadding -> Scaled[0.05]}], 
      Graphics[{{}, {}, {{
          Directive[
           RGBColor[0.5, 0.5, 1.], 
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[
             0.5]]]], {{{{{{}, {{}}}}}, {}}, {{}}}}, {{{{{}}, {}}}, {}}, {}, \
{}}, {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
       DisplayFunction -> Identity, ContentSelectable -> False, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
        PlotRangePadding -> Scaled[0.05]}], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          DynamicModule[{DynamicChart`click$17058 = False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 0.2}, {0., 1., 0.}, {0., 
                    0., 1.}}]}, 
                    Dynamic[DynamicChart`click$17058]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 0.2}, {0., 1., 0.}, {0., 
                   0., 1.}}]}, 
                 Dynamic[DynamicChart`click$17058]]}, {}}}, {}}, {}, {}}, 
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["1.", 25]}, LegendMarkers -> {{None}}, LabelStyle -> {}, 
           LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["1", 25], Top]}, {
      Style["MUR", 20], 
      Graphics[{{}, {}, {{
          Directive[
           RGBColor[0.5, 0.5, 1.], 
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[
             0.5]]]], {{{{{{}, {{}}}}}, {}}, {{}}}}, {{{{{}}, {}}}, {}}, {}, \
{}}, {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
       DisplayFunction -> Identity, ContentSelectable -> False, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
        PlotRangePadding -> Scaled[0.05]}], 
      Graphics[{{}, {}, {{
          Directive[
           RGBColor[0.5, 0.5, 1.], 
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[
             0.5]]]], {{{{{{}, {{}}}}}, {}}, {{}}}}, {{{{{}}, {}}}, {}}, {}, \
{}}, {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
       DisplayFunction -> Identity, ContentSelectable -> False, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
        PlotRangePadding -> Scaled[0.05]}], 
      Graphics[{{}, {}, {{
          Directive[
           RGBColor[0.5, 0.5, 1.], 
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[
             0.5]]]], {{{{{{}, {{}}}}}, {}}, {{}}}}, {{{{{}}, {}}}, {}}, {}, \
{}}, {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
       DisplayFunction -> Identity, ContentSelectable -> False, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
        PlotRangePadding -> Scaled[0.05]}], 
      Graphics[{{}, {}, {{
          Directive[
           RGBColor[0.5, 0.5, 1.], 
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[
             0.5]]]], {{{{{{}, {{}}}}}, {}}, {{}}}}, {{{{{}}, {}}}, {}}, {}, \
{}}, {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
       DisplayFunction -> Identity, ContentSelectable -> False, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
        PlotRangePadding -> Scaled[0.05]}], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          
          DynamicModule[{
           DynamicChart`click$17655 = False, DynamicChart`click$17659 = False,
             DynamicChart`click$17663 = False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 1., {-0.6283185307179586, 
                    3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 9], 
                    Style[9, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 0.06180339887498949}, {
                    0., 1., 0.1902113032590307}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$17655]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.984192, 0.987731, 0.911643]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 
                    1., {-2.7227136331111543`, -0.6283185307179586}], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 5], 
                    Style[5, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 
                    0., -0.020905692653530712`}, {0., 
                    1., -0.19890437907365466`}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$17659]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 
                    1., {-3.141592653589793, -2.7227136331111543`}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., -0.19562952014676116`}, {
                    0., 1., -0.04158233816355186}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$17663]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 9], 
                  Style[9, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 0.06180339887498949}, {0., 
                   1., 0.1902113032590307}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$17655]], 
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 5], 
                  Style[5, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., -0.020905692653530712`}, {
                   0., 1., -0.19890437907365466`}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$17659]], 
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., -0.19562952014676116`}, {
                   0., 1., -0.04158233816355186}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$17663]]}, {}}}, {}}, {}, {}}, 
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.178927, 0.305394, 0.933501]], 
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.984192, 0.987731, 0.911643]], 
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["0.8", 25], None, 
            Style["0.933333", 25]}, LegendMarkers -> {{None, None, None}}, 
           LabelStyle -> {}, LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["15", 25], Top], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          
          DynamicModule[{
           DynamicChart`click$18215 = False, DynamicChart`click$18219 = 
            False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 1., {-1.4279966607226333`, 
                    3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 8], 
                    Style[8, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 0.13097214678905703`}, {
                    0., 1., 0.15114991487085166`}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$18215]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 
                    1., {-3.141592653589793, -1.4279966607226333`}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 3], 
                    Style[3, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., -0.130972146789057}, {0.,
                     1., -0.15114991487085166`}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$18219]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 8], 
                  Style[8, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 0.13097214678905703`}, {0.,
                    1., 0.15114991487085166`}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$18215]], 
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 3], 
                  Style[3, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., -0.130972146789057}, {0., 
                   1., -0.15114991487085166`}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$18219]]}, {}}}, {}}, {}, {}}, 
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.178927, 0.305394, 0.933501]], 
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["0.8", 25], 
            Style["0.866667", 25]}, LegendMarkers -> {{None, None}}, 
           LabelStyle -> {}, LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["11", 25], Top], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          
          DynamicModule[{
           DynamicChart`click$17755 = False, DynamicChart`click$17759 = False,
             DynamicChart`click$17763 = False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 1., {-0.6283185307179586, 
                    3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 9], 
                    Style[9, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 0.06180339887498949}, {
                    0., 1., 0.1902113032590307}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$17755]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.984192, 0.987731, 0.911643]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 
                    1., {-2.7227136331111543`, -0.6283185307179586}], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 5], 
                    Style[5, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 
                    0., -0.020905692653530712`}, {0., 
                    1., -0.19890437907365466`}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$17759]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 
                    1., {-3.141592653589793, -2.7227136331111543`}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., -0.19562952014676116`}, {
                    0., 1., -0.04158233816355186}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$17763]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 9], 
                  Style[9, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 0.06180339887498949}, {0., 
                   1., 0.1902113032590307}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$17755]], 
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 5], 
                  Style[5, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., -0.020905692653530712`}, {
                   0., 1., -0.19890437907365466`}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$17759]], 
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., -0.19562952014676116`}, {
                   0., 1., -0.04158233816355186}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$17763]]}, {}}}, {}}, {}, {}}, 
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.178927, 0.305394, 0.933501]], 
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.984192, 0.987731, 0.911643]], 
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["0.8", 25], None, 
            Style["0.933333", 25]}, LegendMarkers -> {{None, None, None}}, 
           LabelStyle -> {}, LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["15", 25], Top], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          
          DynamicModule[{
           DynamicChart`click$18296 = False, DynamicChart`click$18300 = False,
             DynamicChart`click$18304 = False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 1., {-0.2855993321445265, 
                    3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 6], 
                    Style[6, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 0.028462967654657025`}, {
                    0., 1., 0.19796428837618654`}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$18296]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.984192, 0.987731, 0.911643]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 
                    1., {-2.57039398930074, -0.2855993321445265}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 4], 
                    Style[4, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 0.028462967654657025`}, {
                    0., 1., -0.19796428837618654`}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$18300]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 
                    1., {-3.141592653589793, -2.57039398930074}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., -0.1918985947228995}, {
                    0., 1., -0.05634651136828594}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$18304]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 6], 
                  Style[6, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 0.028462967654657025`}, {
                   0., 1., 0.19796428837618654`}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$18296]], 
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 4], 
                  Style[4, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 0.028462967654657025`}, {
                   0., 1., -0.19796428837618654`}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$18300]], 
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., -0.1918985947228995}, {0., 
                   1., -0.05634651136828594}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$18304]]}, {}}}, {}}, {}, {}}, 
           
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.178927, 0.305394, 0.933501]], 
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.984192, 0.987731, 0.911643]], 
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["0.8", 25], None, 
            Style["0.933333", 25]}, LegendMarkers -> {{None, None, None}}, 
           LabelStyle -> {}, LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["11", 25], Top], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          
          DynamicModule[{
           DynamicChart`click$17834 = False, DynamicChart`click$17838 = False,
             DynamicChart`click$17842 = False, DynamicChart`click$17846 = 
            False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    Disk[{0, 0}, 1., {2.356194490192345, 
                    3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., -0.18477590650225736`}, {
                    0., 1., 0.07653668647301798}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$17834]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.819984, 0.859297, 0.982692]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    Disk[{0, 0}, 1., {0., 2.356194490192345}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 3], 
                    Style[3, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 0.07653668647301798}, {
                    0., 1., 0.18477590650225736`}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$17838]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.992503, 0.986373, 0.425376]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    Disk[{0, 0}, 1., {-2.356194490192345, 0.}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 3], 
                    Style[3, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 0.07653668647301798}, {
                    0., 1., -0.18477590650225736`}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$17842]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 
                    1., {-3.141592653589793, -2.356194490192345}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., -0.18477590650225736`}, {
                    0., 1., -0.07653668647301798}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$17846]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., -0.18477590650225736`}, {
                   0., 1., 0.07653668647301798}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$17834]], 
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 3], 
                  Style[3, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 0.07653668647301798}, {0., 
                   1., 0.18477590650225736`}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$17838]], 
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 3], 
                  Style[3, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 0.07653668647301798}, {0., 
                   1., -0.18477590650225736`}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$17842]], 
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., -0.18477590650225736`}, {
                   0., 1., -0.07653668647301798}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$17846]]}, {}}}, {}}, {}, {}}, 
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.178927, 0.305394, 0.933501]], 
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.819984, 0.859297, 0.982692]], 
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.992503, 0.986373, 0.425376]], 
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["0.8", 25], None, None, 
            Style["1.", 25]}, LegendMarkers -> {{None, None, None, None}}, 
           LabelStyle -> {}, LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["8", 25], Top], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          
          DynamicModule[{
           DynamicChart`click$18375 = False, DynamicChart`click$18379 = False,
             DynamicChart`click$18383 = False, DynamicChart`click$18387 = 
            False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 1., {2.356194490192345, 
                    3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., -0.18477590650225736`}, {
                    0., 1., 0.07653668647301798}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$18375]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.819984, 0.859297, 0.982692]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    Disk[{0, 0}, 1., {0., 2.356194490192345}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 3], 
                    Style[3, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 0.07653668647301798}, {
                    0., 1., 0.18477590650225736`}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$18379]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.992503, 0.986373, 0.425376]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    Disk[{0, 0}, 1., {-2.356194490192345, 0.}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 3], 
                    Style[3, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 0.07653668647301798}, {
                    0., 1., -0.18477590650225736`}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$18383]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 
                    1., {-3.141592653589793, -2.356194490192345}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., -0.18477590650225736`}, {
                    0., 1., -0.07653668647301798}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$18387]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., -0.18477590650225736`}, {
                   0., 1., 0.07653668647301798}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$18375]], 
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 3], 
                  Style[3, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 0.07653668647301798}, {0., 
                   1., 0.18477590650225736`}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$18379]], 
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 3], 
                  Style[3, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 0.07653668647301798}, {0., 
                   1., -0.18477590650225736`}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$18383]], 
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., -0.18477590650225736`}, {
                   0., 1., -0.07653668647301798}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$18387]]}, {}}}, {}}, {}, {}}, 
           
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.178927, 0.305394, 0.933501]], 
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.819984, 0.859297, 0.982692]], 
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.992503, 0.986373, 0.425376]], 
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["0.8", 25], None, None, 
            Style["1.", 25]}, LegendMarkers -> {{None, None, None, None}}, 
           LabelStyle -> {}, LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["8", 25], Top], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          
          DynamicModule[{
           DynamicChart`click$17924 = False, DynamicChart`click$17928 = 
            False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 1., {-1.5707963267948966`, 
                    3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 3], 
                    Style[3, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 0.14142135623730953`}, {
                    0., 1., 0.1414213562373095}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$17924]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 
                    1., {-3.141592653589793, -1.5707963267948966`}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., -0.1414213562373095}, {
                    0., 1., -0.14142135623730953`}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$17928]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 3], 
                  Style[3, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 0.14142135623730953`}, {0.,
                    1., 0.1414213562373095}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$17924]], 
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., -0.1414213562373095}, {0., 
                   1., -0.14142135623730953`}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$17928]]}, {}}}, {}}, {}, {}}, 
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.178927, 0.305394, 0.933501]], 
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["0.8", 25], 
            Style["0.866667", 25]}, LegendMarkers -> {{None, None}}, 
           LabelStyle -> {}, LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["4", 25], Top], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          
          DynamicModule[{
           DynamicChart`click$18465 = False, DynamicChart`click$18469 = 
            False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 1., {-1.5707963267948966`, 
                    3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 3], 
                    Style[3, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 0.14142135623730953`}, {
                    0., 1., 0.1414213562373095}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$18465]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 
                    1., {-3.141592653589793, -1.5707963267948966`}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., -0.1414213562373095}, {
                    0., 1., -0.14142135623730953`}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$18469]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 3], 
                  Style[3, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 0.14142135623730953`}, {0.,
                    1., 0.1414213562373095}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$18465]], 
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., -0.1414213562373095}, {0., 
                   1., -0.14142135623730953`}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$18469]]}, {}}}, {}}, {}, {}}, 
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.178927, 0.305394, 0.933501]], 
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["0.8", 25], 
            Style["0.866667", 25]}, LegendMarkers -> {{None, None}}, 
           LabelStyle -> {}, LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["4", 25], Top], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          DynamicModule[{DynamicChart`click$17990 = False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 0.2}, {0., 1., 0.}, {0., 
                    0., 1.}}]}, 
                    Dynamic[DynamicChart`click$17990]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 0.2}, {0., 1., 0.}, {0., 
                   0., 1.}}]}, 
                 Dynamic[DynamicChart`click$17990]]}, {}}}, {}}, {}, {}}, 
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["1.", 25]}, LegendMarkers -> {{None}}, LabelStyle -> {}, 
           LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["1", 25], Top], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          DynamicModule[{DynamicChart`click$18531 = False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 0.2}, {0., 1., 0.}, {0., 
                    0., 1.}}]}, 
                    Dynamic[DynamicChart`click$18531]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 0.2}, {0., 1., 0.}, {0., 
                   0., 1.}}]}, 
                 Dynamic[DynamicChart`click$18531]]}, {}}}, {}}, {}, {}}, 
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["1.", 25]}, LegendMarkers -> {{None}}, LabelStyle -> {}, 
           LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["1", 25], Top], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          DynamicModule[{DynamicChart`click$18048 = False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 0.2}, {0., 1., 0.}, {0., 
                    0., 1.}}]}, 
                    Dynamic[DynamicChart`click$18048]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 0.2}, {0., 1., 0.}, {0., 
                   0., 1.}}]}, 
                 Dynamic[DynamicChart`click$18048]]}, {}}}, {}}, {}, {}}, 
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["1.", 25]}, LegendMarkers -> {{None}}, LabelStyle -> {}, 
           LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["1", 25], Top]}, {
      Style["LYE", 20], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          DynamicModule[{DynamicChart`click$18599 = False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 0.2}, {0., 1., 0.}, {0., 
                    0., 1.}}]}, 
                    Dynamic[DynamicChart`click$18599]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 0.2}, {0., 1., 0.}, {0., 
                   0., 1.}}]}, 
                 Dynamic[DynamicChart`click$18599]]}, {}}}, {}}, {}, {}}, 
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["0.8", 25]}, LegendMarkers -> {{None}}, LabelStyle -> {}, 
           LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["1", 25], Top], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          DynamicModule[{DynamicChart`click$19052 = False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 0.2}, {0., 1., 0.}, {0., 
                    0., 1.}}]}, 
                    Dynamic[DynamicChart`click$19052]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 0.2}, {0., 1., 0.}, {0., 
                   0., 1.}}]}, 
                 Dynamic[DynamicChart`click$19052]]}, {}}}, {}}, {}, {}}, 
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["0.8", 25]}, LegendMarkers -> {{None}}, LabelStyle -> {}, 
           LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["1", 25], Top], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          DynamicModule[{DynamicChart`click$18665 = False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    TransformationFunction[{{1., 0., 0.2}, {0., 1., 0.}, {0., 
                    0., 1.}}]}, 
                    Dynamic[DynamicChart`click$18665]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 0.2}, {0., 1., 0.}, {0., 
                   0., 1.}}]}, 
                 Dynamic[DynamicChart`click$18665]]}, {}}}, {}}, {}, {}}, 
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["0.8", 25]}, LegendMarkers -> {{None}}, LabelStyle -> {}, 
           LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["1", 25], Top], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          DynamicModule[{DynamicChart`click$19112 = False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    Disk[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 0.2}, {0., 1., 0.}, {0., 
                    0., 1.}}]}, 
                    Dynamic[DynamicChart`click$19112]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 0.2}, {0., 1., 0.}, {0., 
                   0., 1.}}]}, 
                 Dynamic[DynamicChart`click$19112]]}, {}}}, {}}, {}, {}}, 
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["0.8", 25]}, LegendMarkers -> {{None}}, LabelStyle -> {}, 
           LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["1", 25], Top], 
      Graphics[{{}, {}, {{
          Directive[
           RGBColor[0.5, 0.5, 1.], 
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[
             0.5]]]], {{{{{{}, {{}}}}}, {}}, {{}}}}, {{{{{}}, {}}}, {}}, {}, \
{}}, {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
       DisplayFunction -> Identity, ContentSelectable -> False, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
        PlotRangePadding -> Scaled[0.05]}], 
      Graphics[{{}, {}, {{
          Directive[
           RGBColor[0.5, 0.5, 1.], 
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[
             0.5]]]], {{{{{{}, {{}}}}}, {}}, {{}}}}, {{{{{}}, {}}}, {}}, {}, \
{}}, {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
       DisplayFunction -> Identity, ContentSelectable -> False, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
        PlotRangePadding -> Scaled[0.05]}], 
      Graphics[{{}, {}, {{
          Directive[
           RGBColor[0.5, 0.5, 1.], 
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[
             0.5]]]], {{{{{{}, {{}}}}}, {}}, {{}}}}, {{{{{}}, {}}}, {}}, {}, \
{}}, {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
       DisplayFunction -> Identity, ContentSelectable -> False, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
        PlotRangePadding -> Scaled[0.05]}], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          
          DynamicModule[{
           DynamicChart`click$19217 = False, DynamicChart`click$19221 = 
            False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    Disk[{0, 0}, 1., {0., 3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 
                    1.2246467991473533`*^-17}, {0., 1., 0.2}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$19217]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    Disk[{0, 0}, 1., {-3.141592653589793, 0.}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 
                    1.2246467991473533`*^-17}, {0., 1., -0.2}, {0., 0., 
                    1.}}]}, 
                    Dynamic[DynamicChart`click$19221]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 
                   1.2246467991473533`*^-17}, {0., 1., 0.2}, {0., 0., 1.}}]}, 
                 
                 Dynamic[DynamicChart`click$19217]], 
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 
                   1.2246467991473533`*^-17}, {0., 1., -0.2}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$19221]]}, {}}}, {}}, {}, {}}, 
           
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.178927, 0.305394, 0.933501]], 
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["0.8", 25], 
            Style["0.866667", 25]}, LegendMarkers -> {{None, None}}, 
           LabelStyle -> {}, LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["2", 25], Top], 
      Graphics[{{}, {}, {{
          Directive[
           RGBColor[0.5, 0.5, 1.], 
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[
             0.5]]]], {{{{{{}, {{}}}}}, {}}, {{}}}}, {{{{{}}, {}}}, {}}, {}, \
{}}, {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
       DisplayFunction -> Identity, ContentSelectable -> False, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
        PlotRangePadding -> Scaled[0.05]}], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          
          DynamicModule[{
           DynamicChart`click$19284 = False, DynamicChart`click$19288 = 
            False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    Disk[{0, 0}, 1., {0., 3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 
                    1.2246467991473533`*^-17}, {0., 1., 0.2}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$19284]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    Disk[{0, 0}, 1., {-3.141592653589793, 0.}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 
                    1.2246467991473533`*^-17}, {0., 1., -0.2}, {0., 0., 
                    1.}}]}, 
                    Dynamic[DynamicChart`click$19288]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 
                   1.2246467991473533`*^-17}, {0., 1., 0.2}, {0., 0., 1.}}]}, 
                 
                 Dynamic[DynamicChart`click$19284]], 
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 
                   1.2246467991473533`*^-17}, {0., 1., -0.2}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$19288]]}, {}}}, {}}, {}, {}}, 
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.178927, 0.305394, 0.933501]], 
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["0.8", 25], 
            Style["0.866667", 25]}, LegendMarkers -> {{None, None}}, 
           LabelStyle -> {}, LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["2", 25], Top], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          
          DynamicModule[{
           DynamicChart`click$18862 = False, DynamicChart`click$18866 = 
            False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    Disk[{0, 0}, 1., {0., 3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 
                    1.2246467991473533`*^-17}, {0., 1., 0.2}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$18862]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    Disk[{0, 0}, 1., {-3.141592653589793, 0.}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 
                    1.2246467991473533`*^-17}, {0., 1., -0.2}, {0., 0., 
                    1.}}]}, 
                    Dynamic[DynamicChart`click$18866]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 
                   1.2246467991473533`*^-17}, {0., 1., 0.2}, {0., 0., 1.}}]}, 
                 
                 Dynamic[DynamicChart`click$18862]], 
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 
                   1.2246467991473533`*^-17}, {0., 1., -0.2}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$18866]]}, {}}}, {}}, {}, {}}, 
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.178927, 0.305394, 0.933501]], 
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["0.8", 25], 
            Style["0.866667", 25]}, LegendMarkers -> {{None, None}}, 
           LabelStyle -> {}, LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["2", 25], Top], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          
          DynamicModule[{
           DynamicChart`click$19351 = False, DynamicChart`click$19355 = 
            False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    Disk[{0, 0}, 1., {0., 3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 
                    1.2246467991473533`*^-17}, {0., 1., 0.2}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$19351]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    Disk[{0, 0}, 1., {-3.141592653589793, 0.}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 
                    1.2246467991473533`*^-17}, {0., 1., -0.2}, {0., 0., 
                    1.}}]}, 
                    Dynamic[DynamicChart`click$19355]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 
                   1.2246467991473533`*^-17}, {0., 1., 0.2}, {0., 0., 1.}}]}, 
                 
                 Dynamic[DynamicChart`click$19351]], 
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  TransformationFunction[{{1., 0., 
                   1.2246467991473533`*^-17}, {0., 1., -0.2}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$19355]]}, {}}}, {}}, {}, {}}, 
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.178927, 0.305394, 0.933501]], 
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["0.8", 25], 
            Style["0.866667", 25]}, LegendMarkers -> {{None, None}}, 
           LabelStyle -> {}, LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["2", 25], Top], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          DynamicModule[{DynamicChart`click$18928 = False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 0.2}, {0., 1., 0.}, {0., 
                    0., 1.}}]}, 
                    Dynamic[DynamicChart`click$18928]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 0.2}, {0., 1., 0.}, {0., 
                   0., 1.}}]}, 
                 Dynamic[DynamicChart`click$18928]]}, {}}}, {}}, {}, {}}, 
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["1.", 25]}, LegendMarkers -> {{None}}, LabelStyle -> {}, 
           LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["1", 25], Top], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          
          DynamicModule[{
           DynamicChart`click$20293 = False, DynamicChart`click$20297 = False,
             DynamicChart`click$20301 = False, DynamicChart`click$20305 = 
            False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 1., {-0.7022383578612481, 
                    3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 52], 
                    Style[52, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 0.06878978372678567}, {
                    0., 1., 0.18779767212301132`}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$20293]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.819984, 0.859297, 0.982692]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 
                    1., {-2.550234036443479, -0.7022383578612481}], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 25], 
                    Style[25, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 
                    0., -0.011082294983193991`}, {0., 
                    1., -0.1996927207934868}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$20297]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.992503, 0.986373, 0.425376]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 
                    1., {-3.067672826446504, -2.550234036443479}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 7], 
                    Style[7, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., -0.1890367656321639}, {
                    0., 1., -0.06530774256801668}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$20301]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 
                    1., {-3.141592653589793, -3.067672826446504}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., -0.19986341202860458`}, {
                    0., 1., -0.007390299877828983}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$20305]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 52], 
                  Style[52, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 0.06878978372678567}, {0., 
                   1., 0.18779767212301132`}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$20293]], 
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 25], 
                  Style[25, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., -0.011082294983193991`}, {
                   0., 1., -0.1996927207934868}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$20297]], 
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 7], 
                  Style[7, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., -0.1890367656321639}, {0., 
                   1., -0.06530774256801668}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$20301]], 
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., -0.19986341202860458`}, {
                   0., 1., -0.007390299877828983}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$20305]]}, {}}}, {}}, {}, {}}, 
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.178927, 0.305394, 0.933501]], 
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.819984, 0.859297, 0.982692]], 
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.992503, 0.986373, 0.425376]], 
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["0.8", 25], None, None, 
            Style["1.", 25]}, LegendMarkers -> {{None, None, None, None}}, 
           LabelStyle -> {}, LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["85", 25], Top], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          DynamicModule[{DynamicChart`click$18986 = False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 0.2}, {0., 1., 0.}, {0., 
                    0., 1.}}]}, 
                    Dynamic[DynamicChart`click$18986]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  TransformationFunction[{{1., 0., 0.2}, {0., 1., 0.}, {0., 
                   0., 1.}}]}, 
                 Dynamic[DynamicChart`click$18986]]}, {}}}, {}}, {}, {}}, 
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["1.", 25]}, LegendMarkers -> {{None}}, LabelStyle -> {}, 
           LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["1", 25], Top]}, {
      Style["PHI", 20], 
      GrayLevel[1], 
      GrayLevel[1], 
      Graphics[{{}, {}, {{
          Directive[
           RGBColor[0.5, 0.5, 1.], 
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[
             0.5]]]], {{{{{{}, {{}}}}}, {}}, {{}}}}, {{{{{}}, {}}}, {}}, {}, \
{}}, {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
       DisplayFunction -> Identity, ContentSelectable -> False, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
        PlotRangePadding -> Scaled[0.05]}], 
      Graphics[{{}, {}, {{
          Directive[
           RGBColor[0.5, 0.5, 1.], 
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[
             0.5]]]], {{{{{{}, {{}}}}}, {}}, {{}}}}, {{{{{}}, {}}}, {}}, {}, \
{}}, {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
       DisplayFunction -> Identity, ContentSelectable -> False, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
        PlotRangePadding -> Scaled[0.05]}], 
      Graphics[{{}, {}, {{
          Directive[
           RGBColor[0.5, 0.5, 1.], 
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[
             0.5]]]], {{{{{{}, {{}}}}}, {}}, {{}}}}, {{{{{}}, {}}}, {}}, {}, \
{}}, {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
       DisplayFunction -> Identity, ContentSelectable -> False, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
        PlotRangePadding -> Scaled[0.05]}], 
      Graphics[{{}, {}, {{
          Directive[
           RGBColor[0.5, 0.5, 1.], 
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[
             0.5]]]], {{{{{{}, {{}}}}}, {}}, {{}}}}, {{{{{}}, {}}}, {}}, {}, \
{}}, {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
       DisplayFunction -> Identity, ContentSelectable -> False, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
        PlotRangePadding -> Scaled[0.05]}], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          
          DynamicModule[{
           DynamicChart`click$20549 = False, DynamicChart`click$20553 = False,
             DynamicChart`click$20557 = False, DynamicChart`click$20561 = 
            False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 1., {1.5707963267948966`, 
                    3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 2], 
                    Style[2, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., -0.1414213562373095}, {
                    0., 1., 0.14142135623730953`}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$20549]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.819984, 0.859297, 0.982692]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 1., {-0.7853981633974483, 
                    1.5707963267948966`}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 3], 
                    Style[3, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 0.18477590650225736`}, {
                    0., 1., 0.07653668647301796}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$20553]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.992503, 0.986373, 0.425376]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 
                    1., {-2.356194490192345, -0.7853981633974483}], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 2], 
                    Style[2, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 
                    1.2246467991473533`*^-17}, {0., 1., -0.2}, {0., 0., 
                    1.}}]}, 
                    Dynamic[DynamicChart`click$20557]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 
                    1., {-3.141592653589793, -2.356194490192345}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., -0.18477590650225736`}, {
                    0., 1., -0.07653668647301798}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$20561]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 2], 
                  Style[2, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., -0.1414213562373095}, {0., 
                   1., 0.14142135623730953`}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$20549]], 
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 3], 
                  Style[3, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 0.18477590650225736`}, {0.,
                    1., 0.07653668647301796}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$20553]], 
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 2], 
                  Style[2, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 
                   1.2246467991473533`*^-17}, {0., 1., -0.2}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$20557]], 
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., -0.18477590650225736`}, {
                   0., 1., -0.07653668647301798}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$20561]]}, {}}}, {}}, {}, {}}, 
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.178927, 0.305394, 0.933501]], 
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.819984, 0.859297, 0.982692]], 
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.992503, 0.986373, 0.425376]], 
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["0.8", 25], None, None, 
            Style["1.", 25]}, LegendMarkers -> {{None, None, None, None}}, 
           LabelStyle -> {}, LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["8", 25], Top], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          
          DynamicModule[{
           DynamicChart`click$21005 = False, DynamicChart`click$21009 = 
            False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    Disk[{0, 0}, 1., {0., 3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 
                    1.2246467991473533`*^-17}, {0., 1., 0.2}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$21005]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    Disk[{0, 0}, 1., {-3.141592653589793, 0.}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    TransformationFunction[{{1., 0., 
                    1.2246467991473533`*^-17}, {0., 1., -0.2}, {0., 0., 
                    1.}}]}, 
                    Dynamic[DynamicChart`click$21009]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 
                   1.2246467991473533`*^-17}, {0., 1., 0.2}, {0., 0., 1.}}]}, 
                 
                 Dynamic[DynamicChart`click$21005]], 
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 
                   1.2246467991473533`*^-17}, {0., 1., -0.2}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$21009]]}, {}}}, {}}, {}, {}}, 
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.178927, 0.305394, 0.933501]], 
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["0.866667", 25], 
            Style["0.933333", 25]}, LegendMarkers -> {{None, None}}, 
           LabelStyle -> {}, LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["2", 25], Top], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          
          DynamicModule[{
           DynamicChart`click$20627 = False, DynamicChart`click$20631 = 
            False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    Disk[{0, 0}, 1., {0., 3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 
                    1.2246467991473533`*^-17}, {0., 1., 0.2}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$20627]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    Disk[{0, 0}, 1., {-3.141592653589793, 0.}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 
                    1.2246467991473533`*^-17}, {0., 1., -0.2}, {0., 0., 
                    1.}}]}, 
                    Dynamic[DynamicChart`click$20631]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 
                   1.2246467991473533`*^-17}, {0., 1., 0.2}, {0., 0., 1.}}]}, 
                 
                 Dynamic[DynamicChart`click$20627]], 
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 
                   1.2246467991473533`*^-17}, {0., 1., -0.2}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$20631]]}, {}}}, {}}, {}, {}}, 
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.178927, 0.305394, 0.933501]], 
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["0.8", 25], 
            Style["0.866667", 25]}, LegendMarkers -> {{None, None}}, 
           LabelStyle -> {}, LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["2", 25], Top], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          
          DynamicModule[{
           DynamicChart`click$21073 = False, DynamicChart`click$21077 = 
            False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    Disk[{0, 0}, 1., {0., 3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 
                    1.2246467991473533`*^-17}, {0., 1., 0.2}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$21073]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    Disk[{0, 0}, 1., {-3.141592653589793, 0.}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 
                    1.2246467991473533`*^-17}, {0., 1., -0.2}, {0., 0., 
                    1.}}]}, 
                    Dynamic[DynamicChart`click$21077]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 
                   1.2246467991473533`*^-17}, {0., 1., 0.2}, {0., 0., 1.}}]}, 
                 
                 Dynamic[DynamicChart`click$21073]], 
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 
                   1.2246467991473533`*^-17}, {0., 1., -0.2}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$21077]]}, {}}}, {}}, {}, {}}, 
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.178927, 0.305394, 0.933501]], 
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["0.8", 25], 
            Style["0.866667", 25]}, LegendMarkers -> {{None, None}}, 
           LabelStyle -> {}, LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["2", 25], Top], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          
          DynamicModule[{
           DynamicChart`click$20694 = False, DynamicChart`click$20698 = 
            False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    Disk[{0, 0}, 1., {0., 3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 
                    1.2246467991473533`*^-17}, {0., 1., 0.2}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$20694]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    Disk[{0, 0}, 1., {-3.141592653589793, 0.}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 
                    1.2246467991473533`*^-17}, {0., 1., -0.2}, {0., 0., 
                    1.}}]}, 
                    Dynamic[DynamicChart`click$20698]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 
                   1.2246467991473533`*^-17}, {0., 1., 0.2}, {0., 0., 1.}}]}, 
                 
                 Dynamic[DynamicChart`click$20694]], 
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 
                   1.2246467991473533`*^-17}, {0., 1., -0.2}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$20698]]}, {}}}, {}}, {}, {}}, 
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.178927, 0.305394, 0.933501]], 
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["0.8", 25], 
            Style["0.866667", 25]}, LegendMarkers -> {{None, None}}, 
           LabelStyle -> {}, LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["2", 25], Top], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          
          DynamicModule[{
           DynamicChart`click$21140 = False, DynamicChart`click$21144 = 
            False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    Disk[{0, 0}, 1., {0., 3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 
                    1.2246467991473533`*^-17}, {0., 1., 0.2}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$21140]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    Disk[{0, 0}, 1., {-3.141592653589793, 0.}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 
                    1.2246467991473533`*^-17}, {0., 1., -0.2}, {0., 0., 
                    1.}}]}, 
                    Dynamic[DynamicChart`click$21144]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  TransformationFunction[{{1., 0., 
                   1.2246467991473533`*^-17}, {0., 1., 0.2}, {0., 0., 1.}}]}, 
                 
                 Dynamic[DynamicChart`click$21140]], 
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 
                   1.2246467991473533`*^-17}, {0., 1., -0.2}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$21144]]}, {}}}, {}}, {}, {}}, 
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.178927, 0.305394, 0.933501]], 
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["0.8", 25], 
            Style["0.866667", 25]}, LegendMarkers -> {{None, None}}, 
           LabelStyle -> {}, LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["2", 25], Top], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          DynamicModule[{DynamicChart`click$20760 = False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 0.2}, {0., 1., 0.}, {0., 
                    0., 1.}}]}, 
                    Dynamic[DynamicChart`click$20760]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 0.2}, {0., 1., 0.}, {0., 
                   0., 1.}}]}, 
                 Dynamic[DynamicChart`click$20760]]}, {}}}, {}}, {}, {}}, 
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["0.866667", 25]}, LegendMarkers -> {{None}}, 
           LabelStyle -> {}, LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["1", 25], Top], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          DynamicModule[{DynamicChart`click$21207 = False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 0.2}, {0., 1., 0.}, {0., 
                    0., 1.}}]}, 
                    Dynamic[DynamicChart`click$21207]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 0.2}, {0., 1., 0.}, {0., 
                   0., 1.}}]}, 
                 Dynamic[DynamicChart`click$21207]]}, {}}}, {}}, {}, {}}, 
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["0.866667", 25]}, LegendMarkers -> {{None}}, 
           LabelStyle -> {}, LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["1", 25], Top], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          DynamicModule[{DynamicChart`click$20818 = False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 0.2}, {0., 1., 0.}, {0., 
                    0., 1.}}]}, 
                    Dynamic[DynamicChart`click$20818]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 0.2}, {0., 1., 0.}, {0., 
                   0., 1.}}]}, 
                 Dynamic[DynamicChart`click$20818]]}, {}}}, {}}, {}, {}}, 
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["1.", 25]}, LegendMarkers -> {{None}}, LabelStyle -> {}, 
           LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["1", 25], Top]}, {
      Style["SED", 20], 
      GrayLevel[1], 
      GrayLevel[1], 
      GrayLevel[1], 
      GrayLevel[1], 
      Graphics[{{}, {}, {{
          Directive[
           RGBColor[0.5, 0.5, 1.], 
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[
             0.5]]]], {{{{{{}, {{}}}}}, {}}, {{}}}}, {{{{{}}, {}}}, {}}, {}, \
{}}, {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
       DisplayFunction -> Identity, ContentSelectable -> False, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
        PlotRangePadding -> Scaled[0.05]}], 
      Graphics[{{}, {}, {{
          Directive[
           RGBColor[0.5, 0.5, 1.], 
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[
             0.5]]]], {{{{{{}, {{}}}}}, {}}, {{}}}}, {{{{{}}, {}}}, {}}, {}, \
{}}, {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
       DisplayFunction -> Identity, ContentSelectable -> False, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
        PlotRangePadding -> Scaled[0.05]}], 
      Graphics[{{}, {}, {{
          Directive[
           RGBColor[0.5, 0.5, 1.], 
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[
             0.5]]]], {{{{{{}, {{}}}}}, {}}, {{}}}}, {{{{{}}, {}}}, {}}, {}, \
{}}, {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
       DisplayFunction -> Identity, ContentSelectable -> False, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
        PlotRangePadding -> Scaled[0.05]}], 
      Graphics[{{}, {}, {{
          Directive[
           RGBColor[0.5, 0.5, 1.], 
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[
             0.5]]]], {{{{{{}, {{}}}}}, {}}, {{}}}}, {{{{{}}, {}}}, {}}, {}, \
{}}, {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
       DisplayFunction -> Identity, ContentSelectable -> False, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
        PlotRangePadding -> Scaled[0.05]}], 
      Graphics[{{}, {}, {{
          Directive[
           RGBColor[0.5, 0.5, 1.], 
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[
             0.5]]]], {{{{{{}, {{}}}}}, {}}, {{}}}}, {{{{{}}, {}}}, {}}, {}, \
{}}, {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
       DisplayFunction -> Identity, ContentSelectable -> False, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
        PlotRangePadding -> Scaled[0.05]}], 
      Graphics[{{}, {}, {{
          Directive[
           RGBColor[0.5, 0.5, 1.], 
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[
             0.5]]]], {{{{{{}, {{}}}}}, {}}, {{}}}}, {{{{{}}, {}}}, {}}, {}, \
{}}, {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
       DisplayFunction -> Identity, ContentSelectable -> False, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
        PlotRangePadding -> Scaled[0.05]}], 
      Graphics[{{}, {}, {{
          Directive[
           RGBColor[0.5, 0.5, 1.], 
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[
             0.5]]]], {{{{{{}, {{}}}}}, {}}, {{}}}}, {{{{{}}, {}}}, {}}, {}, \
{}}, {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
       DisplayFunction -> Identity, ContentSelectable -> False, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
        PlotRangePadding -> Scaled[0.05]}], 
      Graphics[{{}, {}, {{
          Directive[
           RGBColor[0.5, 0.5, 1.], 
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[
             0.5]]]], {{{{{{}, {{}}}}}, {}}, {{}}}}, {{{{{}}, {}}}, {}}, {}, \
{}}, {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
       DisplayFunction -> Identity, ContentSelectable -> False, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
        PlotRangePadding -> Scaled[0.05]}], 
      Graphics[{{}, {}, {{
          Directive[
           RGBColor[0.5, 0.5, 1.], 
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[
             0.5]]]], {{{{{{}, {{}}}}}, {}}, {{}}}}, {{{{{}}, {}}}, {}}, {}, \
{}}, {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
       DisplayFunction -> Identity, ContentSelectable -> False, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
        PlotRangePadding -> Scaled[0.05]}], 
      Graphics[{{}, {}, {{
          Directive[
           RGBColor[0.5, 0.5, 1.], 
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[
             0.5]]]], {{{{{{}, {{}}}}}, {}}, {{}}}}, {{{{{}}, {}}}, {}}, {}, \
{}}, {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
       DisplayFunction -> Identity, ContentSelectable -> False, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
        PlotRangePadding -> Scaled[0.05]}], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          DynamicModule[{DynamicChart`click$21499 = False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 0.2}, {0., 1., 0.}, {0., 
                    0., 1.}}]}, 
                    Dynamic[DynamicChart`click$21499]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 0.2}, {0., 1., 0.}, {0., 
                   0., 1.}}]}, 
                 Dynamic[DynamicChart`click$21499]]}, {}}}, {}}, {}, {}}, 
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["1.", 25]}, LegendMarkers -> {{None}}, LabelStyle -> {}, 
           LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["1", 25], Top]}, {
      Style["AUS", 20], 
      GrayLevel[1], 
      GrayLevel[1], 
      GrayLevel[1], 
      GrayLevel[1], 
      GrayLevel[1], 
      GrayLevel[1], 
      GrayLevel[1], 
      GrayLevel[1], 
      GrayLevel[1], 
      GrayLevel[1], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          
          DynamicModule[{
           DynamicChart`click$21792 = False, DynamicChart`click$21796 = 
            False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    Disk[{0, 0}, 1., {0., 3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 
                    1.2246467991473533`*^-17}, {0., 1., 0.2}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$21792]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    Disk[{0, 0}, 1., {-3.141592653589793, 0.}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 
                    1.2246467991473533`*^-17}, {0., 1., -0.2}, {0., 0., 
                    1.}}]}, 
                    Dynamic[DynamicChart`click$21796]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 
                   1.2246467991473533`*^-17}, {0., 1., 0.2}, {0., 0., 1.}}]}, 
                 
                 Dynamic[DynamicChart`click$21792]], 
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 
                   1.2246467991473533`*^-17}, {0., 1., -0.2}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$21796]]}, {}}}, {}}, {}, {}}, 
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.178927, 0.305394, 0.933501]], 
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["0.866667", 25], 
            Style["0.933333", 25]}, LegendMarkers -> {{None, None}}, 
           LabelStyle -> {}, LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["2", 25], Top], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          
          DynamicModule[{
           DynamicChart`click$21975 = False, DynamicChart`click$21979 = 
            False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    Disk[{0, 0}, 1., {0., 3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 
                    1.2246467991473533`*^-17}, {0., 1., 0.2}, {0., 0., 1.}}]}, 
                    Dynamic[DynamicChart`click$21975]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    Disk[{0, 0}, 1., {-3.141592653589793, 0.}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 
                    1.2246467991473533`*^-17}, {0., 1., -0.2}, {0., 0., 
                    1.}}]}, 
                    Dynamic[DynamicChart`click$21979]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 
                   1.2246467991473533`*^-17}, {0., 1., 0.2}, {0., 0., 1.}}]}, 
                 
                 Dynamic[DynamicChart`click$21975]], 
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 
                   1.2246467991473533`*^-17}, {0., 1., -0.2}, {0., 0., 1.}}]}, 
                 Dynamic[DynamicChart`click$21979]]}, {}}}, {}}, {}, {}}, 
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.178927, 0.305394, 0.933501]], 
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["0.866667", 25], 
            Style["0.933333", 25]}, LegendMarkers -> {{None, None}}, 
           LabelStyle -> {}, LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["2", 25], Top], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          DynamicModule[{DynamicChart`click$21858 = False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 0.2}, {0., 1., 0.}, {0., 
                    0., 1.}}]}, 
                    Dynamic[DynamicChart`click$21858]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 0.2}, {0., 1., 0.}, {0., 
                   0., 1.}}]}, 
                 Dynamic[DynamicChart`click$21858]]}, {}}}, {}}, {}, {}}, 
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["0.933333", 25]}, LegendMarkers -> {{None}}, 
           LabelStyle -> {}, LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["1", 25], Top], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          DynamicModule[{DynamicChart`click$22041 = False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 0.2}, {0., 1., 0.}, {0., 
                    0., 1.}}]}, 
                    Dynamic[DynamicChart`click$22041]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 0.2}, {0., 1., 0.}, {0., 
                   0., 1.}}]}, 
                 Dynamic[DynamicChart`click$22041]]}, {}}}, {}}, {}, {}}, 
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["0.933333", 25]}, LegendMarkers -> {{None}}, 
           LabelStyle -> {}, LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["1", 25], Top], 
      Labeled[
       Legended[
        Graphics[{{}, {}, 
          DynamicModule[{DynamicChart`click$21916 = False}, {{
             Directive[
              RGBColor[0.5, 0.5, 1.], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.5]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    Charting`DelayedClickEffect[
                    Tooltip[
                    StatusArea[
                    Charting`DelayedMouseEffect[
                    
                    Disk[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}], {"Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}]}], 1], 
                    Style[1, {}]], {"GeometricTransformation", 
                    
                    TransformationFunction[{{1., 0., 0.2}, {0., 1., 0.}, {0., 
                    0., 1.}}]}, 
                    Dynamic[DynamicChart`click$21916]]}}}}}, {}}, {{}}}}, {{{{
               
                Charting`DelayedClickEffect[
                 Tooltip[
                  StatusArea[{{}, {}}, 1], 
                  Style[1, {}]], {"GeometricTransformation", 
                  
                  TransformationFunction[{{1., 0., 0.2}, {0., 1., 0.}, {0., 
                   0., 1.}}]}, 
                 Dynamic[DynamicChart`click$21916]]}, {}}}, {}}, {}, {}}, 
           DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, \
{DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
          PlotRangePadding -> Scaled[0.05]}], {
         Placed[
          SwatchLegend[{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.5]]], 
             RGBColor[0.817319, 0.134127, 0.164218]]}, {
            Style["1.", 25]}, LegendMarkers -> {{None}}, LabelStyle -> {}, 
           LegendLayout -> "Row"], Bottom, Identity]}], 
       Style["1", 25], Top]}}, Background -> {None, {
       RGBColor[1., 1., 0.9], {
        GrayLevel[1], 
        RGBColor[0.8, 1., 0.8]}}}, Dividers -> {{
       RGBColor[0.2, 0.2, 0.2], {
        RGBColor[0.75, 0.75, 0.75]}, 
       RGBColor[0.2, 0.2, 0.2]}, {
       RGBColor[0.2, 0.2, 0.2], 
       RGBColor[0.2, 0.2, 0.2], {False}, 
       RGBColor[0.2, 0.2, 0.2]}}, Alignment -> {{Left, {Center}}}, 
    ItemSize -> {{5, {22}}, {2, {12}}}, Frame -> 
    RGBColor[0.2, 0.2, 0.2]]]]], "Output",
 CellChangeTimes->{3.83647742965413*^9, 3.8368777271130857`*^9, 
  3.8388890873974113`*^9, 3.8388892070750227`*^9, 3.838889241035429*^9, 
  3.838889278414784*^9, 3.838889332552359*^9, 3.838891104917542*^9, 
  3.838956295857127*^9, 3.838964562722961*^9, 3.8390452310218897`*^9, 
  3.839045283434649*^9, 3.8390453796902857`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"760fec62-bb3c-45f5-8143-e1dbcaa83303"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.809231742141047*^9, 3.8092318181492863`*^9}, {
   3.809231852111903*^9, 3.809231886203457*^9}, {3.809231939029587*^9, 
   3.80923195138144*^9}, {3.809231984244627*^9, 3.809232023173233*^9}, 
   3.8092320603955793`*^9, {3.809232127739566*^9, 3.809232199750288*^9}, {
   3.8092322608868923`*^9, 3.809232323565877*^9}, {3.809235191244821*^9, 
   3.809235294902205*^9}, {3.809236696486293*^9, 3.8092367937618628`*^9}, {
   3.809236845977612*^9, 3.8092369654578238`*^9}, {3.809237003450321*^9, 
   3.809237079225795*^9}, {3.80923712846747*^9, 3.809237215541028*^9}, {
   3.809238459229146*^9, 3.809238499998403*^9}, {3.809238640254862*^9, 
   3.809238789179799*^9}, {3.80923889211031*^9, 3.8092388952388287`*^9}, {
   3.809238931508003*^9, 3.8092389925326357`*^9}, {3.80923903334336*^9, 
   3.809239088130547*^9}, {3.8092391752888107`*^9, 3.809239177915536*^9}, {
   3.809239249927556*^9, 3.809239262955648*^9}, {3.809239898346758*^9, 
   3.809239912341035*^9}, {3.809239991221051*^9, 3.8092400273969088`*^9}, {
   3.809240181540786*^9, 3.80924028252199*^9}, {3.8092403160290956`*^9, 
   3.809240352622664*^9}, {3.809240443625176*^9, 3.809240456899363*^9}, {
   3.809240505861644*^9, 3.809240521676982*^9}, {3.8092406035408077`*^9, 
   3.809240676088209*^9}, {3.809240727522087*^9, 3.80924078691392*^9}, {
   3.809241105426775*^9, 3.809241107759804*^9}, {3.809241266754847*^9, 
   3.809241269810403*^9}, 3.809241462060474*^9, {3.809241864569418*^9, 
   3.809241881841817*^9}, {3.809242614096751*^9, 3.809242704030612*^9}, {
   3.809242777696686*^9, 3.809242786339278*^9}, 3.809244749665818*^9, {
   3.809244849330388*^9, 3.8092448500329437`*^9}, {3.8092449415641613`*^9, 
   3.809244943632707*^9}, {3.8093151779136333`*^9, 3.809315190384779*^9}, {
   3.80931531110256*^9, 3.809315329506062*^9}, 3.810881370776298*^9, {
   3.810881418995529*^9, 3.810881533942734*^9}, {3.8108821237190123`*^9, 
   3.810882214495194*^9}, 3.810882265785953*^9, {3.810882464776919*^9, 
   3.810882466354314*^9}, {3.8109623385244303`*^9, 3.810962339560071*^9}, {
   3.810978021693542*^9, 3.8109780226959753`*^9}, {3.811043632502466*^9, 
   3.8110436340627537`*^9}, 3.836455210906495*^9},
 CellLabel->"In[23]:=",ExpressionUUID->"387459d1-85aa-4677-8c32-f3345a4e993b"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8364585829849367`*^9, 3.8364585917671423`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"018b3248-1d00-4020-ae6c-3b62744c3480"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
   "SetDirectory", "[", "\"\</home/carla/GDC/CH_Pool/VV_THRE/\>\"", "]"}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<DOJ_XB_VV_HMAX_FIL.jpeg\>\"", ",", "gridDOJ", ",", 
   RowBox[{"ImageResolution", "\[Rule]", "200"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<Z_XB_VV_HMAX_FIL.jpeg\>\"", ",", "gridZ", ",", 
   RowBox[{"ImageResolution", "\[Rule]", "200"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<F_XB_VV_HMAX_FIL.jpeg\>\"", ",", "gridF", ",", 
   RowBox[{"ImageResolution", "\[Rule]", "200"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQrTbLK/B20hvHzgDlSBDtcCcoCUS/8+VKA9E3boV8
ANEybyD0tzlcautT3jgWX1fQBdE9cypWgOiNByauBdHt2TMj/wNpno66WBCt
FHf6/p3UN45p1fGPQPQSrQ3PQHTv8lPPQfSc8+Xad4H0o6ntuiA66H7g8p9A
ui1tFZjm+dSg/QdIZzOc0gPRax6HKlrlvXE8wsypDKI3363a+6rmjeM8h34w
zVk97RSILup5D6Y1Al8VF05947ju4rMyED1BULmmDEhXzLhZD6I3aIUqlAPp
E2L9qiA6r7XWvBZI++xXsgDRfXMZN0rOeuO4L3rmFhD954B1rxSQXnwzegKI
3neRMccOSKelJoFpADCetks=
  "],
 CellLabel->"In[53]:=",ExpressionUUID->"463316fd-25c1-4cfa-aeb0-5c71d09cadcd"],

Cell[BoxData["\<\"DOJ_XB_VV_HMAX_FIL.jpeg\"\>"], "Output",
 CellChangeTimes->{3.8364579970169983`*^9, 3.836458439375228*^9, 
  3.8364589433732767`*^9, 3.836459327723454*^9, 3.836468795268724*^9, 
  3.8364717182949247`*^9, 3.836471755840671*^9, 3.836476963981256*^9, 
  3.836477119877733*^9, 3.836477336296442*^9, 3.8364774821376038`*^9, 
  3.836877746057535*^9, 3.8388894189900723`*^9, 3.838891146704208*^9, 
  3.838956303200283*^9, 3.838964595188622*^9, 3.839045243237482*^9, 
  3.839045407801569*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"b35eb91f-b59c-4626-a05c-13005415aae5"],

Cell[BoxData["\<\"Z_XB_VV_HMAX_FIL.jpeg\"\>"], "Output",
 CellChangeTimes->{3.8364579970169983`*^9, 3.836458439375228*^9, 
  3.8364589433732767`*^9, 3.836459327723454*^9, 3.836468795268724*^9, 
  3.8364717182949247`*^9, 3.836471755840671*^9, 3.836476963981256*^9, 
  3.836477119877733*^9, 3.836477336296442*^9, 3.8364774821376038`*^9, 
  3.836877746057535*^9, 3.8388894189900723`*^9, 3.838891146704208*^9, 
  3.838956303200283*^9, 3.838964595188622*^9, 3.839045243237482*^9, 
  3.8390454175894938`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"ebc2a461-43ef-461d-8f62-090565d48b9f"],

Cell[BoxData["\<\"F_XB_VV_HMAX_FIL.jpeg\"\>"], "Output",
 CellChangeTimes->{3.8364579970169983`*^9, 3.836458439375228*^9, 
  3.8364589433732767`*^9, 3.836459327723454*^9, 3.836468795268724*^9, 
  3.8364717182949247`*^9, 3.836471755840671*^9, 3.836476963981256*^9, 
  3.836477119877733*^9, 3.836477336296442*^9, 3.8364774821376038`*^9, 
  3.836877746057535*^9, 3.8388894189900723`*^9, 3.838891146704208*^9, 
  3.838956303200283*^9, 3.838964595188622*^9, 3.839045243237482*^9, 
  3.839045426609271*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"8ba4c0e3-09cf-4e2f-8469-7203d93abb47"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dlbDOJ", "=", 
   RowBox[{
    RowBox[{
    "Get", "[", 
     "\"\</home/carla/GDC/CH_Pool/DLB/GDC_CHP_AR_DLB_ALL_Out/GDC_CHP_AR_DLB_\
ALL_S3.txt\>\"", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8388914155806417`*^9, 3.838891488500543*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"8ded14fd-a0ba-4846-9869-eba0325e15c5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Head", "[", "dlbDOJ", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Head", "[", 
  RowBox[{"dlbDOJ", "[", 
   RowBox[{"[", "2", "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Keys", "[", 
  RowBox[{"dlbDOJ", "[", 
   RowBox[{"[", "2", "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dlbDOJ", "[", 
   RowBox[{"[", "2", "]"}], "]"}], "[", "\"\<name\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dlbDOJ", "[", 
   RowBox[{"[", "2", "]"}], "]"}], "[", "\"\<value\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dev", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<No BCL as CAM\>\"", ",", "\"\<No BCL as CM\>\"", ",", 
     "\"\<No BCL as ORS\>\"", ",", "\"\<No BCL as SIL\>\"", ",", 
     "\"\<No Main Culm as CAM\>\"", ",", "\"\<No Main Culm as ML\>\"", ",", 
     "\"\<No Main Culm as ORS\>\"", ",", "\"\<No Main Culm as SIL\>\"", ",", 
     "\"\<No Non-Culm as CAM\>\"", ",", "\"\<No Non-Culm as CM\>\"", ",", 
     "\"\<No Non-Culm as ML\>\"", ",", "\"\<No Non-Culm as SIL\>\"", ",", 
     RowBox[{"!", "\"\<No BCL as ML\>\""}], ",", 
     RowBox[{"!", "\"\<No Main Culm as CM\>\""}], ",", 
     RowBox[{"!", "\"\<No Non-Culm as ORS\>\""}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MemberQ", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"dlbDOJ", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", "\"\<list\>\"", "]"}], ",", "1"}],
     "]"}], ",", "dev"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8388914926619663`*^9, 3.838891758430694*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"79580cdc-7d02-47f0-80f9-f7c3c80dce4d"],

Cell[BoxData["List"], "Output",
 CellChangeTimes->{{3.838891498264303*^9, 3.838891566713808*^9}, {
   3.83889162433508*^9, 3.8388916340436497`*^9}, {3.83889173659608*^9, 
   3.838891758871254*^9}, 3.83895631410985*^9, 3.839045263940763*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"76f1b976-b644-4563-95dd-4203a11d1eba"],

Cell[BoxData["Association"], "Output",
 CellChangeTimes->{{3.838891498264303*^9, 3.838891566713808*^9}, {
   3.83889162433508*^9, 3.8388916340436497`*^9}, {3.83889173659608*^9, 
   3.838891758871254*^9}, 3.83895631410985*^9, 3.839045263943338*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"4133f0b0-1f15-43f0-b5d1-8258b31ed06e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"name\"\>", ",", "\<\"value\"\>", ",", "\<\"list\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.838891498264303*^9, 3.838891566713808*^9}, {
   3.83889162433508*^9, 3.8388916340436497`*^9}, {3.83889173659608*^9, 
   3.838891758871254*^9}, 3.83895631410985*^9, 3.839045263945299*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"654900a9-855f-4cf1-9b0d-6901c7110496"],

Cell[BoxData["\<\"MAX\"\>"], "Output",
 CellChangeTimes->{{3.838891498264303*^9, 3.838891566713808*^9}, {
   3.83889162433508*^9, 3.8388916340436497`*^9}, {3.83889173659608*^9, 
   3.838891758871254*^9}, 3.83895631410985*^9, 3.839045263947452*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"34bbdedb-3c1f-4749-8d0a-ee19c8affb6d"],

Cell[BoxData["0.0064516129032258064`"], "Output",
 CellChangeTimes->{{3.838891498264303*^9, 3.838891566713808*^9}, {
   3.83889162433508*^9, 3.8388916340436497`*^9}, {3.83889173659608*^9, 
   3.838891758871254*^9}, 3.83895631410985*^9, 3.839045263949471*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"a954b51c-654f-4774-9107-fa203a7a0dc3"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.838891498264303*^9, 3.838891566713808*^9}, {
   3.83889162433508*^9, 3.8388916340436497`*^9}, {3.83889173659608*^9, 
   3.838891758871254*^9}, 3.83895631410985*^9, 3.839045263952158*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"39fc8ea9-3e1c-4c04-8bb3-b7d2e44b8148"]
}, Open  ]]
},
WindowSize->{1366, 703},
WindowMargins->{{0, Automatic}, {0, Automatic}},
FrontEndVersion->"12.0 for Linux x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1524, 43, 174, "Input",ExpressionUUID->"9e4d81f8-df63-4331-949c-e71acd1c7214"],
Cell[CellGroupData[{
Cell[2129, 69, 593, 13, 25, "Print",ExpressionUUID->"85d76b6a-2ad6-4aa6-9fb3-c636455aa8df"],
Cell[2725, 84, 597, 13, 25, "Print",ExpressionUUID->"881ecf28-4735-4448-ac05-0bf801a45a59"]
}, Open  ]]
}, Open  ]],
Cell[3349, 101, 23759, 540, 1987, "Input",ExpressionUUID->"7aedee36-1850-4312-8ed4-208fc2720596"],
Cell[27111, 643, 2522, 56, 147, "Input",ExpressionUUID->"d24108b3-c222-4f1f-885f-6a9bd06f3b56"],
Cell[29636, 701, 418, 8, 31, "Input",ExpressionUUID->"1118b9e4-ecf2-4e2c-bec8-314b74df257c"],
Cell[30057, 711, 2051, 41, 78, "Input",ExpressionUUID->"da0a5a0c-5203-4684-92ec-3c0bdc55bf00"],
Cell[CellGroupData[{
Cell[32133, 756, 1398, 26, 78, "Input",ExpressionUUID->"232d6ce8-b635-48bd-b14f-881da64e4a39"],
Cell[33534, 784, 1055313, 21822, 1619, "Output",ExpressionUUID->"760fec62-bb3c-45f5-8143-e1dbcaa83303"]
}, Open  ]],
Cell[1088862, 22609, 2307, 31, 55, "Input",ExpressionUUID->"387459d1-85aa-4677-8c32-f3345a4e993b"],
Cell[1091172, 22642, 175, 2, 31, "Input",ExpressionUUID->"018b3248-1d00-4020-ae6c-3b62744c3480"],
Cell[CellGroupData[{
Cell[1091372, 22648, 1231, 27, 147, "Input",ExpressionUUID->"463316fd-25c1-4cfa-aeb0-5c71d09cadcd"],
Cell[1092606, 22677, 581, 8, 35, "Output",ExpressionUUID->"b35eb91f-b59c-4626-a05c-13005415aae5"],
Cell[1093190, 22687, 581, 8, 35, "Output",ExpressionUUID->"ebc2a461-43ef-461d-8f62-090565d48b9f"],
Cell[1093774, 22697, 579, 8, 91, "Output",ExpressionUUID->"8ba4c0e3-09cf-4e2f-8469-7203d93abb47"]
}, Open  ]],
Cell[1094368, 22708, 401, 10, 31, "Input",ExpressionUUID->"8ded14fd-a0ba-4846-9869-eba0325e15c5"],
Cell[CellGroupData[{
Cell[1094794, 22722, 1651, 39, 216, "Input",ExpressionUUID->"79580cdc-7d02-47f0-80f9-f7c3c80dce4d"],
Cell[1096448, 22763, 319, 4, 35, "Output",ExpressionUUID->"76f1b976-b644-4563-95dd-4203a11d1eba"],
Cell[1096770, 22769, 326, 4, 35, "Output",ExpressionUUID->"4133f0b0-1f15-43f0-b5d1-8258b31ed06e"],
Cell[1097099, 22775, 408, 7, 35, "Output",ExpressionUUID->"654900a9-855f-4cf1-9b0d-6901c7110496"],
Cell[1097510, 22784, 326, 4, 35, "Output",ExpressionUUID->"34bbdedb-3c1f-4749-8d0a-ee19c8affb6d"],
Cell[1097839, 22790, 337, 4, 35, "Output",ExpressionUUID->"a954b51c-654f-4774-9107-fa203a7a0dc3"],
Cell[1098179, 22796, 319, 4, 35, "Output",ExpressionUUID->"39fc8ea9-3e1c-4c04-8bb3-b7d2e44b8148"]
}, Open  ]]
}
]
*)

